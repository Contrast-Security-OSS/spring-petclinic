{
  "version" : "2.1.0",
  "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "Contrast Scan",
        "organization" : "Contrast Security, Inc.",
        "version" : "pkg: null, engine: null, policy: null",
        "informationUri" : "https://www.contrastsecurity.com"
      }
    },
    "artifacts" : [ ],
    "results" : [ {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in OwnerController.deleteOwner() reachable from OwnerController.deleteOwner()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java"
          },
          "region" : {
            "startLine" : 165,
            "startColumn" : 1,
            "snippet" : {
              "text" : "\t\t\tstatement.execute(\"DELETE FROM owners WHERE id = \" + ownerId);"
            }
          },
          "contextRegion" : {
            "snippet" : { }
          }
        }
      } ],
      "partialFingerprints" : {
        "GITHUB_SOURCECODE_LSH/v1" : "dd1004d3fa743ea6:1"
      },
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:163 via variable `ownerId` to file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:165 via variable `$stack1`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java"
                },
                "region" : {
                  "startLine" : 163,
                  "snippet" : {
                    "rendered" : {
                      "text" : "\t\ttry (Connection connection = dataSource.getConnection(); Statement statement = connection.createStatement()) {"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.springframework.samples.petclinic.owner.OwnerController:javax.sql.DataSource dataSource>;    // Java line 163", "connection = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 163", "statement = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement()>();    // Java line 163" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "OwnerController.deleteOwner()",
                "fullyQualifiedName" : "org.springframework.samples.petclinic.owner.OwnerController.deleteOwner(java.lang.String)"
              } ],
              "message" : {
                "text" : "ownerId"
              }
            },
            "state" : {
              "ownerId" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java"
                },
                "region" : {
                  "startLine" : 165,
                  "snippet" : {
                    "rendered" : {
                      "text" : "\t\t\tstatement.execute(\"DELETE FROM owners WHERE id = \" + ownerId);"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'file:///Users/shaneschisler/projects/spring-petclinic/src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:165' in the method 'OwnerController.deleteOwner()' via variable '$stack1'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = new java.lang.StringBuilder;    // Java line 165", "$stack2 = \"DELETE FROM owners WHERE id = \";    // Java line 165", "$stack1 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);    // Java line 165", "$stack1 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ownerId);    // Java line 165", "$stack1 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.String toString()>();    // Java line 165", "interfaceinvoke statement.<java.sql.Statement: boolean execute(java.lang.String)>($stack1);    // Java line 165" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "OwnerController.deleteOwner()",
                "fullyQualifiedName" : "org.springframework.samples.petclinic.owner.OwnerController.deleteOwner(java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack1"
              }
            },
            "state" : {
              "$stack1" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.deleteOwner(java.lang.String)"
        }
      } ]
    } ],
    "properties" : {
      "scannedData" : {
        "scannedBodyClasses" : [ "com.zaxxer.hikari.pool.PoolBase$NopMetricsTrackerDelegate", "nonapi.io.github.classgraph.fileslice.Slice$1", "nonapi.io.github.classgraph.utils.FastPathResolver", "aj.org.objectweb.asm.Attribute", "com.zaxxer.hikari.HikariDataSource", "nonapi.io.github.classgraph.classloaderhandler.OSGiDefaultClassLoaderHandler", "nonapi.io.github.classgraph.classloaderhandler.ClassLoaderHandlerRegistry$1", "aj.org.objectweb.asm.MethodVisitor", "nonapi.io.github.classgraph.concurrency.AutoCloseableExecutorService", "nonapi.io.github.classgraph.classpath.ClassLoaderFinder", "com.zaxxer.hikari.metrics.prometheus.PrometheusHistogramMetricsTracker", "aj.org.objectweb.asm.ClassVisitor", "nonapi.io.github.classgraph.classloaderhandler.QuarkusClassLoaderHandler", "aj.org.objectweb.asm.ByteVector", "nonapi.io.github.classgraph.classloaderhandler.WebsphereLibertyClassLoaderHandler", "nonapi.io.github.classgraph.json.ReferenceEqualityKey", "com.zaxxer.hikari.util.SuspendResumeLock$1", "nonapi.io.github.classgraph.classloaderhandler.ClassLoaderHandler", "nonapi.io.github.classgraph.classpath.ModuleFinder", "nonapi.io.github.classgraph.concurrency.WorkQueue", "nonapi.io.github.classgraph.classloaderhandler.JPMSClassLoaderHandler", "nonapi.io.github.classgraph.fileslice.reader.RandomAccessFileReader", "nonapi.io.github.classgraph.fileslice.reader.RandomAccessByteBufferReader", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$3", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$1", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$7", "com.zaxxer.hikari.pool.ProxyLeakTask", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$6", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$5", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$4", "nonapi.io.github.classgraph.json.JSONSerializer$1", "org.springframework.samples.petclinic.visit.Visit", "com.zaxxer.hikari.util.ClockSource$MillisecondClockSource", "com.zaxxer.hikari.metrics.MetricsTracker", "org.springframework.samples.petclinic.owner.PetRepository", "com.zaxxer.hikari.pool.HikariPool$1", "nonapi.io.github.classgraph.concurrency.WorkQueue$WorkUnitWrapper", "aj.org.objectweb.asm.Symbol", "nonapi.io.github.classgraph.classpath.ClassLoaderOrder", "org.springframework.samples.petclinic.vet.Vets", "org.springframework.lang.NonNullFields", "nonapi.io.github.classgraph.classpath.SystemJarFinder$1", "aj.org.objectweb.asm.TypeReference", "nonapi.io.github.classgraph.classpath.CallStackReader", "org.springframework.lang.NonNull", "com.zaxxer.hikari.pool.HikariPool$PoolInitializationException", "org.springframework.samples.petclinic.system.CacheConfiguration", "com.zaxxer.hikari.util.ConcurrentBag", "nonapi.io.github.classgraph.json.JSONParser", "com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector", "nonapi.io.github.classgraph.json.ClassFields$1", "nonapi.io.github.classgraph.json.ClassFields$2", "aj.org.objectweb.asm.Frame", "nonapi.io.github.classgraph.types.TypeUtils", "org.springframework.samples.petclinic.visit.VisitRepository", "com.zaxxer.hikari.pool.HikariPool$HouseKeeper", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker", "nonapi.io.github.classgraph.json.Id", "com.zaxxer.hikari.pool.HikariProxyPreparedStatement", "com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$Connection99Percent", "aj.org.objectweb.asm.ClassTooLargeException", "org.springframework.lang.NonNullApi", "com.zaxxer.hikari.util.IsolationLevel", "com.zaxxer.hikari.pool.ProxyFactory", "nonapi.io.github.classgraph.scanspec.WhiteBlackList$WhiteBlackListWholeString", "aj.org.objectweb.asm.Type", "nonapi.io.github.classgraph.concurrency.WorkQueue$1", "nonapi.io.github.classgraph.json.TypeResolutions", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$5$1", "org.springframework.samples.petclinic.vet.VetController", "com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory", "com.zaxxer.hikari.util.DriverDataSource", "org.springframework.samples.petclinic.owner.Owner", "org.springframework.samples.petclinic.model.Person", "aj.org.objectweb.asm.signature.SignatureReader", "org.springframework.samples.petclinic.system.CrashController", "com.zaxxer.hikari.util.JavassistProxyFactory", "nonapi.io.github.classgraph.scanspec.ScanSpec$ScanSpecPathMatch", "nonapi.io.github.classgraph.fileslice.FileSlice", "aj.org.objectweb.asm.Opcodes", "com.zaxxer.hikari.util.ClockSource$Factory", "com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory", "com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate", "nonapi.io.github.classgraph.classpath.ClasspathFinder", "nonapi.io.github.classgraph.classpath.ClasspathOrder$ClasspathElementAndClassLoader", "nonapi.io.github.classgraph.utils.VersionFinder$OperatingSystem", "aj.org.objectweb.asm.FieldVisitor", "com.zaxxer.hikari.metrics.prometheus.PrometheusMetricsTracker", "aj.org.objectweb.asm.SymbolTable", "org.springframework.samples.petclinic.model.BaseEntity", "com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator", "nonapi.io.github.classgraph.scanspec.WhiteBlackList$WhiteBlackListLeafname", "module-info", "com.zaxxer.hikari.pool.PoolEntry", "aj.org.objectweb.asm.Edge", "nonapi.io.github.classgraph.classloaderhandler.SpringBootRestartClassLoaderHandler", "nonapi.io.github.classgraph.utils.CollectionUtils", "nonapi.io.github.classgraph.concurrency.WorkQueue$WorkUnitProcessor", "nonapi.io.github.classgraph.utils.StringUtils", "nonapi.io.github.classgraph.classloaderhandler.ClassLoaderHandlerRegistry", "nonapi.io.github.classgraph.fileslice.reader.ClassfileReader", "nonapi.io.github.classgraph.classloaderhandler.AntClassLoaderHandler", "com.zaxxer.hikari.pool.ProxyConnection$ClosedConnection", "nonapi.io.github.classgraph.classloaderhandler.FelixClassLoaderHandler", "nonapi.io.github.classgraph.json.JSONObject", "org.springframework.samples.petclinic.owner.OwnerController", "nonapi.io.github.classgraph.classloaderhandler.ClassLoaderHandlerRegistry$ClassLoaderHandlerRegistryEntry", "aj.org.objectweb.asm.Handle", "com.zaxxer.hikari.pool.HikariProxyStatement", "nonapi.io.github.classgraph.json.FieldTypeInfo$PrimitiveType", "nonapi.io.github.classgraph.utils.LogNode", "nonapi.io.github.classgraph.json.JSONSerializer", "com.zaxxer.hikari.pool.HikariProxyResultSet", "aj.org.objectweb.asm.RecordComponentVisitor", "aj.org.objectweb.asm.Context", "com.zaxxer.hikari.pool.ProxyPreparedStatement", "org.springframework.samples.petclinic.owner.PetValidator", "aj.org.objectweb.asm.Label", "nonapi.io.github.classgraph.fastzipfilereader.ZipFileSlice", "aj.org.objectweb.asm.AnnotationVisitor", "com.zaxxer.hikari.pool.PoolBase$ConnectionSetupException", "nonapi.io.github.classgraph.types.Parser", "java.util.Optional", "aj.org.objectweb.asm.SymbolTable$Entry", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory", "com.zaxxer.hikari.util.ClockSource$NanosecondClockSource", "nonapi.io.github.classgraph.classpath.SystemJarFinder", "nonapi.io.github.classgraph.classloaderhandler.ParentLastDelegationOrderTestClassLoaderHandler", "org.springframework.samples.petclinic.owner.PetController", "org.springframework.samples.petclinic.owner.Pet", "aj.org.objectweb.asm.RecordComponentWriter", "aj.org.objectweb.asm.Handler", "org.springframework.samples.petclinic.model.NamedEntity", "com.zaxxer.hikari.pool.ProxyResultSet", "com.zaxxer.hikari.metrics.PoolStats", "com.zaxxer.hikari.util.ClockSource", "nonapi.io.github.classgraph.scanspec.WhiteBlackList$WhiteBlackListPrefix", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$RecyclableInflater", "nonapi.io.github.classgraph.fastzipfilereader.LogicalZipFile", "com.zaxxer.hikari.hibernate.HikariConfigurationUtil", "nonapi.io.github.classgraph.types.ParseException", "com.zaxxer.hikari.metrics.IMetricsTracker", "aj.org.objectweb.asm.AnnotationWriter", "com.zaxxer.hikari.pool.HikariProxyCallableStatement", "com.zaxxer.hikari.util.PropertyElf", "com.zaxxer.hikari.metrics.prometheus.PrometheusHistogramMetricsTrackerFactory", "org.springframework.lang.UsesSunMisc", "org.springframework.samples.petclinic.vet.Vet", "nonapi.io.github.classgraph.utils.VersionFinder", "nonapi.io.github.classgraph.json.FieldTypeInfo$1", "nonapi.io.github.classgraph.classloaderhandler.JBossClassLoaderHandler", "aj.org.objectweb.asm.signature.SignatureWriter", "org.springframework.samples.petclinic.vet.Specialty", "nonapi.io.github.classgraph.classpath.CallStackReader$CallerResolver", "aj.org.objectweb.asm.MethodTooLargeException", "aj.org.objectweb.asm.TypePath", "nonapi.io.github.classgraph.json.ClassFieldCache$NoConstructor", "aj.org.objectweb.asm.ModuleVisitor", "com.zaxxer.hikari.util.SuspendResumeLock", "com.zaxxer.hikari.metrics.prometheus.PrometheusMetricsTrackerFactory", "nonapi.io.github.classgraph.utils.Join", "com.zaxxer.hikari.HikariPoolMXBean", "nonapi.io.github.classgraph.json.JSONArray", "nonapi.io.github.classgraph.types.TypeUtils$ModifierType", "nonapi.io.github.classgraph.classloaderhandler.FallbackClassLoaderHandler", "nonapi.io.github.classgraph.concurrency.InterruptionChecker", "com.zaxxer.hikari.HikariConfigMXBean", "org.springframework.samples.petclinic.owner.PetTypeFormatter", "nonapi.io.github.classgraph.classloaderhandler.WebsphereTraditionalClassLoaderHandler", "nonapi.io.github.classgraph.classpath.CallStackReader$3", "nonapi.io.github.classgraph.classpath.CallStackReader$2", "nonapi.io.github.classgraph.classpath.CallStackReader$1", "nonapi.io.github.classgraph.utils.FileUtils$2", "nonapi.io.github.classgraph.utils.FileUtils$1", "nonapi.io.github.classgraph.classloaderhandler.EquinoxClassLoaderHandler", "com.zaxxer.hikari.hibernate.HikariConnectionProvider", "com.zaxxer.hikari.pool.HikariPool$MaxLifetimeTask", "nonapi.io.github.classgraph.fileslice.reader.RandomAccessArrayReader", "org.springframework.lang.UsesJava7", "org.springframework.lang.UsesJava8", "nonapi.io.github.classgraph.json.ParameterizedTypeImpl", "com.zaxxer.hikari.SQLExceptionOverride", "com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry", "nonapi.io.github.classgraph.classloaderhandler.TomcatWebappClassLoaderBaseHandler", "nonapi.io.github.classgraph.fileslice.ArraySlice", "com.zaxxer.hikari.SQLExceptionOverride$Override", "nonapi.io.github.classgraph.fileslice.reader.RandomAccessReader", "aj.org.objectweb.asm.signature.SignatureVisitor", "nonapi.io.github.classgraph.json.JSONUtils", "nonapi.io.github.classgraph.json.JSONDeserializer$ObjectInstantiation", "nonapi.io.github.classgraph.json.JSONReference", "com.zaxxer.hikari.pool.ProxyCallableStatement", "org.springframework.samples.petclinic.owner.OwnerRepository", "nonapi.io.github.classgraph.classloaderhandler.WeblogicClassLoaderHandler", "nonapi.io.github.classgraph.scanspec.ScanSpec", "com.zaxxer.hikari.util.FastList", "com.zaxxer.hikari.pool.ProxyStatement", "nonapi.io.github.classgraph.fileslice.Slice", "com.zaxxer.hikari.pool.PoolBase$1", "org.springframework.samples.petclinic.system.WelcomeController", "nonapi.io.github.classgraph.concurrency.SimpleThreadFactory", "nonapi.io.github.classgraph.fileslice.reader.SequentialReader", "nonapi.io.github.classgraph.classloaderhandler.PlexusClassWorldsClassRealmClassLoaderHandler", "nonapi.io.github.classgraph.json.FieldTypeInfo", "nonapi.io.github.classgraph.utils.ReflectionUtils", "com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate", "aj.org.objectweb.asm.FieldWriter", "org.springframework.lang.Nullable", "nonapi.io.github.classgraph.utils.FileUtils", "org.springframework.samples.petclinic.PetClinicApplication", "nonapi.io.github.classgraph.fastzipfilereader.PhysicalZipFile", "nonapi.io.github.classgraph.classloaderhandler.EquinoxContextFinderClassLoaderHandler", "org.springframework.samples.petclinic.owner.PetType", "org.springframework.lang.UsesSunHttpServer", "com.zaxxer.hikari.pool.ProxyLeakTask$1", "com.zaxxer.hikari.metrics.prometheus.PrometheusMetricsTrackerFactory$RegistrationStatus", "nonapi.io.github.classgraph.recycler.RecycleOnClose", "nonapi.io.github.classgraph.json.JSONUtils$1", "com.zaxxer.hikari.HikariConfig", "nonapi.io.github.classgraph.json.ClassFieldCache", "nonapi.io.github.classgraph.json.ClassFields", "nonapi.io.github.classgraph.json.JSONDeserializer", "nonapi.io.github.classgraph.concurrency.SingletonMap$1", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker", "com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener", "com.zaxxer.hikari.metrics.MetricsTrackerFactory", "nonapi.io.github.classgraph.recycler.Recycler", "nonapi.io.github.classgraph.classloaderhandler.URLClassLoaderHandler", "aj.org.objectweb.asm.ModuleWriter", "nonapi.io.github.classgraph.concurrency.SingletonMap$SingletonHolder", "nonapi.io.github.classgraph.utils.JarUtils", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler", "nonapi.io.github.classgraph.classpath.ClasspathOrder", "com.zaxxer.hikari.pool.HikariProxyConnection", "com.zaxxer.hikari.pool.ProxyLeakTaskFactory", "com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData", "com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor", "com.zaxxer.hikari.pool.ProxyDatabaseMetaData", "com.zaxxer.hikari.pool.HikariPool$KeepaliveTask", "nonapi.io.github.classgraph.recycler.Resettable", "aj.org.objectweb.asm.ConstantDynamic", "com.zaxxer.hikari.util.FastList$1", "org.springframework.samples.petclinic.vet.VetRepository", "nonapi.io.github.classgraph.concurrency.SingletonMap", "com.zaxxer.hikari.HikariJNDIFactory", "aj.org.objectweb.asm.CurrentFrame", "org.springframework.samples.petclinic.owner.VisitController", "nonapi.io.github.classgraph.concurrency.SingletonMap$NullSingletonException", "aj.org.objectweb.asm.Attribute$Set", "nonapi.io.github.classgraph.utils.URLPathEncoder", "com.zaxxer.hikari.util.UtilityElf", "aj.org.objectweb.asm.MethodWriter", "nonapi.io.github.classgraph.scanspec.WhiteBlackList", "nonapi.io.github.classgraph.json.JSONDeserializer$1", "com.zaxxer.hikari.pool.ProxyConnection", "com.zaxxer.hikari.pool.ProxyConnection$ClosedConnection$$$_umbrella_deLambda1", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda4", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda5", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda2", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda3", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda6", "com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$$$_umbrella_deLambda1", "com.zaxxer.hikari.util.ConcurrentBag$$$_umbrella_deLambda3", "com.zaxxer.hikari.util.ConcurrentBag$$$_umbrella_deLambda2", "com.zaxxer.hikari.util.ConcurrentBag$$$_umbrella_deLambda1", "com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker$$$_umbrella_deLambda1", "com.zaxxer.hikari.util.ConcurrentBag$$$_umbrella_deLambda4", "com.zaxxer.hikari.util.PropertyElf$$$_umbrella_deLambda1", "com.zaxxer.hikari.util.PropertyElf$$$_umbrella_deLambda2", "com.zaxxer.hikari.util.PropertyElf$$$_umbrella_deLambda3", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda5", "com.zaxxer.hikari.util.PropertyElf$$$_umbrella_deLambda4", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda6", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda3", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda4", "org.springframework.samples.petclinic.system.CacheConfiguration$$$_umbrella_deLambda1", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda1", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda3", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda2", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda5", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda1", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda4", "com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker$$$_umbrella_deLambda2", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda7", "com.zaxxer.hikari.metrics.prometheus.HikariCPCollector$$$_umbrella_deLambda6" ],
        "nonScannedBodyClasses" : [ "java.awt.peer.WindowPeer", "io.micrometer.core.instrument.MeterRegistry$Config", "java.util.function.IntUnaryOperator", "sun.awt.datatransfer.DataTransferer", "java.awt.JobAttributes$MultipleDocumentHandlingType", "java.lang.Integer", "org.springframework.validation.BindingErrorProcessor", "javax.servlet.Registration$Dynamic", "javax.swing.border.Border", "java.lang.Runtime$Version", "java.util.Vector", "java.sql.DriverAction", "org.springframework.core.ParameterizedTypeReference$1", "javax.servlet.Filter", "javax.swing.KeyStroke", "javassist.CodeConverter", "java.lang.CharSequence", "jdk.internal.org.objectweb.asm.SymbolTable$Entry", "java.awt.dnd.DropTargetDragEvent", "org.springframework.beans.factory.InjectionPoint", "java.awt.Scrollbar", "java.io.Serializable", "java.nio.file.FileVisitResult", "java.lang.invoke.BoundMethodHandle$Specializer$Factory", "java.sql.ConnectionBuilder", "java.awt.dnd.DropTargetListener", "org.springframework.transaction.annotation.Isolation", "java.time.format.Parsed", "java.time.LocalDateTime", "java.util.Currency", "java.util.function.Supplier", "java.lang.ClassCastException", "javax.servlet.annotation.ServletSecurity$TransportGuarantee", "javassist.CtNewMethod", "java.util.LinkedHashMap", "java.nio.channels.InterruptibleChannel", "java.lang.StringBuffer", "org.springframework.boot.BeanDefinitionLoader", "java.net.InetAddress$NameService", "javax.accessibility.AccessibleIcon", "javax.swing.JRootPane", "io.micrometer.core.instrument.Clock", "java.util.function.ToIntFunction", "javax.swing.event.PopupMenuListener", "java.sql.Savepoint", "java.lang.Module", "org.springframework.core.ResolvableType$1", "java.sql.Driver", "java.nio.file.attribute.UserPrincipalLookupService", "javax.servlet.ServletContext", "java.util.concurrent.locks.AbstractQueuedSynchronizer", "java.lang.Throwable$PrintStreamOrWriter", "java.lang.reflect.Array", "java.nio.channels.AsynchronousChannel", "sun.java2d.pipe.RegionIterator", "java.lang.System$Logger$Level", "sun.font.CoreMetrics", "java.awt.Window$Type", "java.lang.annotation.Documented", "sun.util.calendar.Gregorian$Date", "java.util.concurrent.ThreadFactory", "org.springframework.web.bind.annotation.DeleteMapping", "java.awt.image.BufferStrategy", "javax.persistence.ForeignKey", "javassist.bytecode.CodeIterator$Gap", "java.awt.peer.FontPeer", "java.util.function.DoubleToIntFunction", "java.util.stream.Collectors", "org.springframework.beans.factory.annotation.Autowire", "java.util.stream.DoubleStream", "java.awt.image.renderable.RenderContext", "java.awt.Paint", "javassist.CodeConverter$ArrayAccessReplacementMethodNames", "java.time.LocalDate", "javassist.CtBehavior", "java.lang.module.ModuleDescriptor$Exports", "org.hibernate.engine.jdbc.connections.spi.ConnectionProvider", "java.awt.Toolkit", "java.awt.event.InputEvent", "java.awt.TextComponent", "java.util.OptionalDouble", "java.util.concurrent.atomic.AtomicBoolean", "java.nio.channels.AsynchronousFileChannel", "org.springframework.beans.factory.config.DependencyDescriptor", "io.github.classgraph.ClassGraph$ClasspathElementFilter", "java.nio.charset.Charset", "javax.swing.JMenuItem", "org.springframework.transaction.annotation.Propagation", "java.lang.AbstractStringBuilder", "io.micrometer.core.instrument.Gauge$1", "java.lang.ref.WeakReference", "org.springframework.cache.annotation.EnableCaching", "java.io.PrintStream", "org.springframework.core.annotation.AliasFor", "java.lang.module.ModuleDescriptor$Builder", "java.nio.file.attribute.BasicFileAttributes", "java.text.DigitList", "java.lang.Float", "java.awt.event.FocusListener", "javax.servlet.SessionCookieConfig", "java.nio.file.attribute.FileTime", "sun.util.calendar.CalendarSystem", "java.awt.geom.Rectangle2D$Float", "jdk.internal.org.objectweb.asm.SymbolTable", "javax.xml.namespace.NamespaceContext", "javax.xml.xpath.XPathFunction", "sun.awt.util.IdentityArrayList", "sun.font.FontStrikeDesc", "org.springframework.core.convert.converter.ConverterRegistry", "java.awt.Canvas", "javax.xml.xpath.XPathVariableResolver", "javax.swing.AbstractButton$Handler", "java.sql.ShardingKeyBuilder", "java.time.format.FormatStyle", "java.lang.Error", "java.lang.AssertionError", "java.util.TreeSet", "sun.awt.EventQueueItem", "java.util.stream.DoubleStream$Builder", "org.hibernate.service.Service", "java.net.PasswordAuthentication", "java.util.ResourceBundle", "java.util.concurrent.ThreadLocalRandom", "java.util.jar.Attributes$Name", "sun.reflect.generics.tree.TypeVariableSignature", "java.lang.String", "org.slf4j.event.LoggingEvent", "java.lang.invoke.VarHandle", "java.util.Properties", "java.util.stream.LongStream", "java.util.concurrent.Executor", "java.lang.Deprecated", "java.io.StringWriter", "io.micrometer.core.instrument.Meter", "java.awt.MenuContainer", "java.awt.VKCollection", "java.lang.invoke.MemberName$Factory", "java.time.temporal.ChronoUnit", "java.awt.geom.Point2D$Float", "java.util.function.DoubleToLongFunction", "org.springframework.boot.SpringBootConfiguration", "java.nio.LongBuffer", "java.util.ArrayDeque", "java.sql.Time", "java.text.DecimalFormatSymbols", "java.sql.SQLXML", "java.nio.file.WatchKey", "java.awt.dnd.DragGestureRecognizer", "javax.servlet.http.WebConnection", "org.springframework.beans.PropertyEditorRegistrySupport$1", "java.lang.invoke.ClassSpecializer$Factory", "org.springframework.core.ResolvableType", "javassist.compiler.ast.CallExpr", "java.awt.event.MouseListener", "java.lang.invoke.BoundMethodHandle", "sun.util.calendar.AbstractCalendar", "javax.swing.JMenuBar", "org.springframework.beans.support.MutableSortDefinition", "jdk.internal.org.objectweb.asm.TypePath", "java.util.function.Predicate", "java.nio.file.attribute.FileAttributeView", "java.security.PrivilegedAction", "java.lang.ThreadLocal$ThreadLocalMap", "javax.cache.configuration.CompleteConfiguration", "org.springframework.core.AliasRegistry", "java.awt.image.VolatileImage", "sun.reflect.generics.visitor.TypeTreeVisitor", "java.awt.Dimension", "java.security.cert.Certificate", "java.security.Principal", "java.awt.peer.CheckboxMenuItemPeer", "sun.util.calendar.BaseCalendar", "java.awt.Graphics", "java.util.SortedMap", "sun.reflect.generics.tree.BooleanSignature", "javassist.compiler.ast.NewExpr", "java.awt.PageAttributes$PrintQualityType", "javax.servlet.HttpConstraintElement", "java.util.function.LongBinaryOperator", "org.springframework.boot.BootstrapContext", "java.nio.ShortBuffer", "java.util.concurrent.atomic.AtomicReference", "java.awt.image.ImageProducer", "java.awt.TextField", "java.nio.file.AccessMode", "io.micrometer.core.instrument.distribution.DistributionStatisticConfig", "java.awt.JobAttributes$SidesType", "io.micrometer.core.instrument.distribution.HistogramSupport", "java.io.OutputStream", "java.security.SecureClassLoader", "java.awt.Desktop", "java.lang.reflect.AccessibleObject", "io.micrometer.core.instrument.Gauge$Builder", "jdk.internal.access.foreign.UnmapperProxy", "java.awt.List", "java.util.concurrent.TimeUnit", "java.text.BreakIterator", "java.awt.event.PaintEvent", "javassist.bytecode.AttributeInfo", "javassist.expr.Instanceof", "javax.accessibility.AccessibleComponent", "java.awt.dnd.DragSourceEvent", "java.util.concurrent.ConcurrentSkipListMap$Node", "java.net.HttpURLConnection", "java.awt.event.WindowFocusListener", "java.util.regex.Pattern$BitClass", "java.awt.Panel", "org.springframework.context.ApplicationEventPublisher", "java.nio.channels.ByteChannel", "java.nio.channels.spi.AbstractInterruptibleChannel", "java.util.regex.Pattern$CharPredicate", "java.util.EnumSet", "java.lang.reflect.Member", "java.net.NetworkInterface", "java.awt.datatransfer.FlavorMap", "java.sql.SQLTransientException", "javassist.bytecode.Opcode", "java.awt.event.WindowAdapter", "java.util.EventListener", "javax.persistence.Index", "org.springframework.boot.SpringApplicationRunListeners", "java.awt.JobAttributes$DestinationType", "java.awt.peer.TaskbarPeer", "io.micrometer.core.instrument.FunctionCounter", "java.awt.PageAttributes$OrientationRequestedType", "java.util.concurrent.CopyOnWriteArrayList", "java.io.FilenameFilter", "java.util.Hashtable$Entry", "javax.xml.xpath.XPath", "org.springframework.boot.ApplicationArguments", "io.github.classgraph.ModuleReaderProxy", "java.beans.JavaBean", "org.springframework.core.env.ConfigurablePropertyResolver", "java.lang.StackWalker", "javax.swing.Action", "javassist.bytecode.LongVector", "java.awt.geom.Point2D$Double", "java.awt.datatransfer.FlavorTable", "java.lang.StackTraceElement", "org.springframework.boot.CommandLineRunner", "java.sql.Clob", "java.awt.CheckboxGroup", "org.springframework.boot.autoconfigure.EnableAutoConfiguration", "java.lang.annotation.Target", "java.lang.reflect.Field", "java.lang.invoke.ClassSpecializer$SpeciesData", "org.springframework.context.annotation.ComponentScan", "java.awt.event.MouseEvent", "org.slf4j.event.SubstituteLoggingEvent", "java.text.spi.CollatorProvider", "javassist.bytecode.Bytecode", "java.io.ObjectInputStream$FieldValues", "java.awt.datatransfer.MimeTypeParameterList", "javax.swing.event.MenuEvent", "java.awt.event.AWTEventListener", "jdk.internal.loader.AbstractClassLoaderValue", "java.sql.SQLNonTransientException", "java.sql.Connection", "java.nio.file.FileTreeWalker$Event", "java.awt.geom.Point2D", "java.lang.Runnable", "javax.cache.processor.MutableEntry", "jdk.internal.vm.annotation.Hidden", "org.w3c.dom.DOMStringList", "javax.swing.plaf.ToolTipUI", "io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder", "java.lang.Short", "java.util.Locale", "java.beans.VetoableChangeListener", "javax.xml.validation.TypeInfoProvider", "javassist.CtConstructor", "sun.reflect.generics.tree.ClassSignature", "java.util.PrimitiveIterator$OfInt", "java.lang.invoke.MethodHandle$PolymorphicSignature", "javassist.ClassPath", "java.awt.image.RenderedImage", "java.lang.module.Configuration", "java.util.ServiceLoader", "javax.accessibility.AccessibleContext", "org.springframework.core.env.PropertySources", "java.lang.constant.DynamicConstantDesc", "io.micrometer.core.instrument.LongTaskTimer$1", "java.sql.CallableStatement", "java.util.spi.LocaleServiceProvider", "javassist.compiler.ast.Symbol", "java.util.OptionalInt", "java.util.HashSet", "java.nio.file.LinkOption", "java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser", "org.w3c.dom.Node", "java.awt.im.InputMethodRequests", "org.w3c.dom.TypeInfo", "javax.servlet.ServletSecurityElement", "org.springframework.context.annotation.FilterType", "java.util.concurrent.ExecutorService", "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition", "java.lang.invoke.DirectMethodHandle", "java.awt.EventQueue", "org.xml.sax.InputSource", "java.util.concurrent.Semaphore", "java.awt.Checkbox", "sun.security.util.ManifestEntryVerifier", "org.springframework.context.annotation.ScopedProxyMode", "sun.reflect.generics.tree.ClassTypeSignature", "java.awt.event.ActionEvent", "javax.security.auth.Subject", "java.sql.DriverManager", "java.lang.annotation.RetentionPolicy", "java.util.function.LongSupplier", "org.springframework.beans.PropertyEditorRegistry", "java.lang.module.ModuleReference", "javassist.bytecode.FieldInfo", "javax.persistence.ConstraintMode", "sun.awt.RequestFocusController", "org.springframework.core.env.PropertyResolver", "java.lang.reflect.Executable", "java.io.PrintWriter", "javax.swing.event.ChangeEvent", "io.micrometer.core.instrument.Meter$1", "java.util.concurrent.ForkJoinPool$ManagedBlocker", "java.io.ObjectInputValidation", "javax.servlet.FilterRegistration", "sun.reflect.generics.tree.Wildcard", "java.awt.Component", "org.w3c.dom.DocumentFragment", "java.awt.GraphicsDevice$WindowTranslucency", "java.security.Guard", "javax.xml.namespace.QName", "org.slf4j.ILoggerFactory", "java.awt.dnd.DragSourceListener", "java.util.Dictionary", "java.nio.file.CopyOption", "java.awt.EventFilter", "java.lang.Throwable", "java.io.ObjectInputFilter$FilterInfo", "io.micrometer.core.annotation.Timed", "javax.naming.RefAddr", "javax.swing.MenuSelectionManager", "java.lang.module.ModuleReader", "javax.xml.validation.Schema", "java.io.BufferedOutputStream", "java.awt.event.InvocationEvent", "javax.servlet.http.HttpServletRequest", "java.lang.module.Resolver", "java.util.ResourceBundle$Control", "java.util.function.BiConsumer", "java.io.ObjectOutputStream", "java.text.CalendarBuilder", "org.springframework.beans.PropertyAccessException", "java.nio.channels.CompletionHandler", "javax.cache.integration.CompletionListener", "javax.xml.validation.Validator", "jdk.internal.module.ServicesCatalog", "javax.swing.MenuElement", "java.nio.file.attribute.FileStoreAttributeView", "java.util.logging.LogManager$CloseOnReset", "java.util.function.IntConsumer", "java.util.AbstractList", "java.lang.AutoCloseable", "java.nio.ByteBuffer", "java.awt.Button", "javax.cache.configuration.MutableConfiguration", "java.util.stream.IntStream$Builder", "java.text.ParseException", "java.awt.peer.TextFieldPeer", "javax.swing.event.AncestorEvent", "java.awt.CheckboxMenuItem", "java.lang.Cloneable", "javax.naming.Reference", "org.springframework.web.bind.annotation.RequestMethod", "java.awt.desktop.SystemEventListener", "java.util.logging.Logger", "io.micrometer.core.instrument.Counter$1", "javax.persistence.Column", "jdk.internal.reflect.CallerSensitive", "jdk.internal.org.objectweb.asm.ClassWriter", "java.time.temporal.ChronoField", "java.awt.datatransfer.DataFlavor", "java.awt.GraphicsDevice", "javax.xml.xpath.XPathExpression", "io.micrometer.core.instrument.DistributionSummary$1", "java.lang.annotation.Retention", "java.util.function.DoubleBinaryOperator", "java.lang.constant.ConstantDesc", "java.awt.peer.ChoicePeer", "org.xml.sax.Attributes", "sun.util.resources.OpenListResourceBundle", "javax.accessibility.AccessibleAction", "java.awt.peer.TextAreaPeer", "java.awt.font.NumericShaper", "java.nio.file.attribute.AttributeView", "javax.swing.event.MenuDragMouseListener", "javassist.compiler.Parser", "sun.font.FontLineMetrics", "java.util.concurrent.ConcurrentSkipListMap$KeySpliterator", "java.io.FileDescriptor", "java.awt.Dialog$ModalExclusionType", "io.micrometer.core.instrument.config.MeterFilter", "java.util.ServiceLoader$Provider", "java.util.concurrent.ConcurrentSkipListMap$Index", "org.springframework.ui.Model", "sun.font.AttributeValues", "java.awt.dnd.DropTargetEvent", "java.util.Spliterator$OfLong", "java.util.stream.Collector", "java.time.zone.ZoneOffsetTransitionRule", "java.util.logging.LogManager$LoggerWeakRef", "javassist.Modifier", "org.springframework.format.Parser", "javassist.compiler.ast.DoubleConst", "javax.swing.SingleSelectionModel", "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic", "javax.swing.plaf.PopupMenuUI", "java.nio.ByteOrder", "java.awt.TextArea", "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode", "org.springframework.beans.factory.support.BeanNameGenerator", "org.springframework.beans.PropertyEditorRegistrySupport$CustomEditorHolder", "java.awt.peer.PanelPeer", "javax.servlet.descriptor.JspConfigDescriptor", "java.lang.ReflectiveOperationException", "org.springframework.format.Printer", "org.springframework.core.ResolvableTypeProvider", "org.springframework.beans.BeanMetadataAttribute", "java.time.temporal.TemporalAccessor", "java.util.function.ToLongBiFunction", "java.nio.file.attribute.UserPrincipal", "org.springframework.beans.factory.config.BeanDefinition", "javax.accessibility.AccessibleRole", "java.io.Flushable", "java.security.PrivilegedActionException", "java.nio.file.FileStore", "javassist.compiler.ast.ASTree", "java.util.stream.Collector$Characteristics", "org.springframework.beans.factory.ObjectFactory", "java.awt.font.FontRenderContext", "java.security.Provider$Service", "org.springframework.beans.factory.BeanFactory", "java.awt.event.MouseWheelListener", "java.lang.invoke.MethodHandles$Lookup$ClassDefiner", "org.springframework.beans.factory.config.ConfigurableBeanFactory", "sun.util.locale.Extension", "javassist.expr.NewArray", "javassist.compiler.ast.FieldDecl", "org.springframework.context.annotation.ComponentScan$Filter", "java.util.AbstractCollection", "java.awt.event.ComponentListener", "sun.java2d.pipe.SpanIterator", "java.util.concurrent.atomic.AtomicInteger", "java.lang.Readable", "java.util.zip.ZipFile", "javax.servlet.http.HttpSession", "javax.servlet.ServletConfig", "org.hibernate.service.spi.Configurable", "java.net.InetAddressImpl", "java.text.spi.DateFormatSymbolsProvider", "java.net.URLStreamHandlerFactory", "java.time.chrono.Era", "java.time.format.DateTimeParseContext", "java.security.Key", "java.awt.PageAttributes", "java.awt.peer.LightweightPeer", "java.lang.annotation.Annotation", "java.io.DataInput", "org.w3c.dom.ProcessingInstruction", "jdk.internal.loader.LoaderPool", "java.util.Currency$CurrencyProperty", "java.time.temporal.TemporalUnit", "java.util.Spliterator$OfDouble", "org.springframework.beans.factory.config.Scope", "java.util.function.Function", "javassist.bytecode.CodeAttribute$LdcEntry", "sun.reflect.generics.repository.MethodRepository", "java.util.function.BiPredicate", "org.springframework.beans.support.PropertyComparator", "java.util.stream.Stream$Builder", "java.awt.Graphics2D", "javax.swing.TransferHandler", "java.lang.Boolean", "java.util.NoSuchElementException", "java.awt.LayoutManager", "sun.reflect.generics.tree.ArrayTypeSignature", "javax.persistence.Id", "java.time.Period", "io.micrometer.core.instrument.Timer$Sample", "java.awt.Component$BaselineResizeBehavior", "javax.servlet.ServletRequest", "java.lang.ref.Cleaner$Cleanable", "org.springframework.boot.ConfigurableBootstrapContext", "org.springframework.context.annotation.AdviceMode", "org.w3c.dom.UserDataHandler", "java.awt.event.FocusEvent$Cause", "java.security.PublicKey", "org.springframework.beans.factory.config.BeanExpressionContext", "io.micrometer.core.instrument.TimeGauge$Builder", "sun.java2d.pipe.Region", "jdk.internal.org.objectweb.asm.ClassReader", "sun.reflect.generics.tree.ShortSignature", "org.w3c.dom.ls.LSResourceResolver", "java.awt.Taskbar$State", "java.lang.reflect.GenericArrayType", "java.security.AccessControlContext", "io.micrometer.core.instrument.Statistic", "org.springframework.util.StringValueResolver", "java.util.Arrays", "java.lang.invoke.LambdaForm", "javax.cache.processor.EntryProcessor", "java.awt.FileDialog", "sun.reflect.generics.repository.ClassRepository", "org.w3c.dom.CDATASection", "sun.reflect.generics.visitor.Visitor", "javax.swing.text.AttributeSet", "java.lang.invoke.TypeDescriptor", "java.util.function.LongToIntFunction", "sun.reflect.generics.tree.TypeSignature", "java.time.chrono.ChronoLocalDateTime", "java.nio.file.DirectoryStream$Filter", "javax.swing.plaf.RootPaneUI", "sun.reflect.generics.tree.TypeArgument", "java.lang.invoke.MethodHandles", "java.util.Spliterator$OfPrimitive", "java.awt.geom.AffineTransform", "java.lang.reflect.RecordComponent", "javax.cache.CacheManager", "org.springframework.beans.factory.config.NamedBeanHolder", "org.springframework.beans.factory.ListableBeanFactory", "sun.reflect.generics.repository.GenericDeclRepository", "java.awt.event.KeyListener", "java.awt.peer.ListPeer", "javax.swing.TransferHandler$DropLocation", "io.micrometer.core.instrument.FunctionCounter$Builder", "javassist.compiler.ast.Stmnt", "javax.cache.Cache$Entry", "io.micrometer.core.instrument.internal.Mergeable", "java.sql.SQLException", "io.micrometer.core.instrument.Timer", "sun.reflect.generics.repository.FieldRepository", "org.springframework.core.env.ConfigurableEnvironment", "java.net.URLConnection", "javassist.expr.ConstructorCall", "java.awt.font.GlyphMetrics", "java.lang.ModuleLayer$Controller", "io.micrometer.core.instrument.Tag", "org.hibernate.service.spi.Stoppable", "java.awt.ActiveEvent", "java.nio.file.Files", "java.awt.desktop.OpenFilesHandler", "javassist.compiler.ast.AssignExpr", "javax.persistence.OneToMany", "java.lang.RuntimeException", "java.awt.image.TileObserver", "sun.reflect.generics.tree.CharSignature", "javassist.compiler.ast.Keyword", "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject", "java.awt.RenderingHints$Key", "java.lang.invoke.TypeDescriptor$OfMethod", "java.awt.peer.LabelPeer", "java.awt.Point", "java.awt.RenderingHints", "org.springframework.beans.factory.support.BeanDefinitionRegistry", "java.util.logging.Formatter", "java.lang.NullPointerException", "org.springframework.beans.factory.config.ConfigurableListableBeanFactory", "java.text.Annotation", "java.lang.Math", "javassist.compiler.MemberResolver$Method", "java.lang.ref.PhantomReference", "javax.persistence.JoinTable", "jdk.internal.vm.annotation.ForceInline", "java.awt.Taskbar", "sun.reflect.annotation.AnnotationType", "java.awt.Font", "java.util.AbstractSequentialList", "java.io.FileNotFoundException", "java.awt.JobAttributes$DefaultSelectionType", "java.io.Writer", "java.beans.FeatureDescriptor", "java.util.logging.Handler", "sun.text.spi.JavaTimeDateTimePatternProvider", "javax.servlet.ServletInputStream", "java.text.ParsePosition", "org.springframework.boot.Bootstrapper", "java.util.Deque", "java.awt.color.ColorSpace", "javax.servlet.http.HttpUpgradeHandler", "java.awt.AWTEvent", "java.text.spi.DateFormatProvider", "javassist.compiler.Token", "java.awt.DisplayMode", "org.springframework.web.bind.annotation.GetMapping", "javassist.bytecode.CodeIterator", "javax.swing.JPopupMenu", "javassist.compiler.Javac", "java.lang.annotation.ElementType", "org.springframework.core.metrics.StartupStep", "java.text.spi.NumberFormatProvider", "javassist.expr.ExprEditor$LoopContext", "java.util.regex.Pattern$Node", "java.lang.invoke.MethodType", "java.text.DateFormatSymbols", "javax.servlet.http.Part", "java.util.jar.JarVerifier", "java.util.logging.Logger$LoggerBundle", "javax.swing.InputMap", "org.springframework.data.repository.query.Param", "java.lang.IndexOutOfBoundsException", "javax.persistence.MappedSuperclass", "java.time.ZonedDateTime", "java.awt.Cursor", "javassist.CtClass", "sun.util.locale.provider.LocaleProviderAdapter$Type", "java.lang.Long", "java.awt.MenuShortcut", "java.io.ObjectStreamField", "org.springframework.web.bind.annotation.PostMapping", "java.awt.Frame", "java.util.stream.Collectors$Partition", "java.math.MathContext", "jdk.internal.vm.annotation.DontInline", "javax.accessibility.Accessible", "java.sql.PreparedStatement", "javax.cache.spi.CachingProvider", "java.awt.ScrollPane", "java.time.ZoneId", "java.util.concurrent.ConcurrentLinkedQueue$Node", "org.hibernate.Version", "java.util.concurrent.locks.LockSupport", "java.security.Permission", "java.lang.StringBuilder", "javax.servlet.annotation.MultipartConfig", "org.springframework.data.jpa.repository.Query", "java.awt.Polygon", "org.springframework.validation.Errors", "org.springframework.validation.BindingResult", "java.awt.image.Raster", "java.lang.ref.SoftReference", "java.lang.constant.DirectMethodHandleDesc", "java.awt.Stroke", "java.awt.desktop.OpenURIEvent", "java.nio.channels.ScatteringByteChannel", "javax.accessibility.AccessibleTable", "java.awt.ComponentOrientation", "org.springframework.context.ApplicationEvent", "java.time.chrono.AbstractChronology", "javassist.compiler.ast.MethodDecl", "java.util.function.BiFunction", "io.micrometer.core.instrument.distribution.ValueAtPercentile", "java.util.function.LongPredicate", "java.util.concurrent.Delayed", "java.lang.ThreadLocal", "java.awt.Image", "java.security.DomainCombiner", "java.awt.dnd.DragSource", "java.time.Instant", "jdk.internal.vm.annotation.ReservedStackAccess", "org.springframework.core.convert.Property", "java.nio.channels.SeekableByteChannel", "java.util.LinkedList$Node", "org.springframework.core.AttributeAccessorSupport", "org.springframework.core.env.Environment", "javassist.expr.Handler", "javassist.ClassPool", "java.math.MutableBigInteger", "javax.swing.event.MenuKeyEvent", "java.util.jar.JarEntry", "java.net.Proxy$Type", "java.io.FilterInputStream", "java.lang.constant.DirectMethodHandleDesc$Kind", "java.awt.event.HierarchyEvent", "java.awt.font.TextHitInfo", "sun.font.EAttribute", "java.util.concurrent.RunnableFuture", "java.lang.invoke.WrongMethodTypeException", "org.w3c.dom.NodeList", "java.lang.module.ModuleDescriptor$Provides", "javassist.compiler.MemberCodeGen", "java.lang.Appendable", "sun.util.locale.provider.LocaleResources", "org.springframework.boot.SpringApplicationRunListener", "io.micrometer.core.instrument.MeterRegistry$More", "org.w3c.dom.CharacterData", "javax.servlet.http.MappingMatch", "java.awt.peer.TextComponentPeer", "java.io.ObjectInputFilter$Status", "jdk.internal.loader.Loader$LoadedModule", "java.lang.Object", "java.awt.image.WritableRaster", "java.awt.CompositeContext", "java.util.function.DoublePredicate", "java.awt.ImageCapabilities", "javax.accessibility.AccessibleSelection", "sun.font.CharToGlyphMapper", "java.awt.geom.Rectangle2D", "javax.accessibility.AccessibleBundle", "java.time.temporal.TemporalQuery", "java.awt.dnd.DragGestureEvent", "java.net.URLClassLoader", "java.lang.Enum$EnumDesc", "java.lang.module.ModuleFinder", "java.lang.InternalError", "javax.persistence.Entity", "javax.persistence.CascadeType", "java.util.concurrent.locks.AbstractQueuedSynchronizer$Node", "java.util.Set", "io.micrometer.core.instrument.FunctionCounter$1", "javax.persistence.GeneratedValue", "java.time.format.ResolverStyle", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater", "sun.reflect.generics.tree.MethodTypeSignature", "java.lang.reflect.Proxy", "org.slf4j.helpers.SubstituteLogger", "javax.xml.transform.Source", "java.util.function.ObjIntConsumer", "javax.swing.plaf.ButtonUI", "java.lang.VirtualMachineError", "javax.swing.AbstractButton", "jdk.internal.ref.PhantomCleanable", "java.lang.UnsupportedOperationException", "java.lang.StackFrameInfo", "sun.font.StrikeMetrics", "sun.reflect.generics.tree.VoidDescriptor", "javax.xml.bind.annotation.XmlRootElement", "io.micrometer.core.instrument.FunctionTimer", "sun.font.Font2D", "jdk.internal.org.objectweb.asm.ModuleVisitor", "java.awt.dnd.DragSourceContext", "javax.xml.parsers.DocumentBuilder", "java.awt.peer.FileDialogPeer", "java.lang.Comparable", "java.security.CodeSource", "java.awt.desktop.PreferencesEvent", "javassist.compiler.ast.Declarator", "java.net.URL", "java.io.ObjectOutput", "org.slf4j.LoggerFactory", "java.util.regex.MatchResult", "javassist.compiler.CodeGen", "io.micrometer.core.instrument.FunctionTimer$Builder", "java.util.spi.TimeZoneNameProvider", "java.lang.Enum", "java.awt.event.WindowListener", "java.nio.file.PathMatcher", "java.net.URI", "java.sql.SQLWarning", "javassist.CtMethod$ConstParameter", "javax.swing.plaf.ComponentUI", "java.net.Authenticator", "javassist.compiler.ast.Visitor", "javax.swing.JMenu", "java.util.NavigableSet", "sun.reflect.generics.tree.FieldTypeSignature", "java.util.logging.LogRecord", "javax.swing.event.MenuListener", "javax.persistence.GenerationType", "java.net.URLStreamHandler", "javax.persistence.PersistenceException", "java.lang.invoke.LambdaFormBuffer", "java.awt.event.HierarchyListener", "javax.naming.NamingEnumeration", "java.util.concurrent.ConcurrentLinkedQueue", "java.awt.font.TransformAttribute", "java.net.ContentHandlerFactory", "javassist.compiler.ast.IntConst", "io.micrometer.core.instrument.LongTaskTimer$Builder", "org.springframework.web.bind.annotation.ModelAttribute", "sun.reflect.generics.repository.ConstructorRepository", "java.lang.invoke.Invokers", "jdk.internal.HotSpotIntrinsicCandidate", "javax.swing.TransferHandler$HasGetTransferHandler", "java.lang.invoke.VarHandle$AccessType", "java.util.Hashtable", "javax.cache.configuration.Factory", "java.beans.PropertyEditor", "sun.awt.PeerEvent", "org.springframework.core.style.ToStringStyler", "javax.servlet.http.HttpServletResponse", "org.springframework.context.ApplicationContext", "jdk.internal.org.objectweb.asm.Label", "java.awt.event.FocusEvent", "javax.servlet.DispatcherType", "org.springframework.util.StringUtils", "java.nio.file.WatchEvent$Modifier", "java.awt.Color", "java.io.RandomAccessFile", "javax.validation.constraints.NotEmpty", "java.awt.image.SampleModel", "jdk.internal.org.objectweb.asm.ConstantDynamic", "java.awt.peer.ScrollbarPeer", "org.w3c.dom.Document", "java.sql.SQLType", "java.nio.file.Path", "org.xml.sax.EntityResolver", "java.nio.channels.Channel", "org.springframework.core.io.Resource", "java.awt.peer.ContainerPeer", "javax.persistence.ManyToOne", "javax.persistence.UniqueConstraint", "java.time.temporal.TemporalField", "javax.servlet.Servlet", "java.util.concurrent.BlockingQueue", "java.util.logging.ErrorManager", "javassist.bytecode.StackMap", "java.util.concurrent.CountDownLatch", "javax.servlet.annotation.HttpMethodConstraint", "java.lang.LayerInstantiationException", "java.text.CollationKey", "java.lang.invoke.MemberName", "java.util.function.ToDoubleFunction", "java.io.ObjectInputStream$GetField", "java.awt.PaintContext", "javax.servlet.http.HttpSessionContext", "java.lang.invoke.MethodTypeForm", "sun.reflect.generics.repository.AbstractRepository", "java.awt.geom.Dimension2D", "java.awt.event.ActionListener", "java.io.ByteArrayOutputStream", "java.awt.peer.MouseInfoPeer", "java.awt.dnd.DragSourceMotionListener", "java.awt.font.TextAttribute", "sun.awt.FwDispatcher", "java.lang.reflect.Constructor", "jdk.internal.org.objectweb.asm.Context", "java.util.OptionalLong", "java.util.Calendar", "java.text.AttributedCharacterIterator$Attribute", "java.awt.Dialog$ModalityType", "java.nio.Buffer", "org.springframework.core.env.EnvironmentCapable", "java.util.concurrent.ScheduledExecutorService", "javax.swing.JToolTip", "java.io.Console", "java.awt.Container", "org.springframework.core.convert.ConversionService", "sun.util.logging.PlatformLogger", "io.micrometer.core.instrument.Timer$ResourceSample", "java.time.format.TextStyle", "java.lang.reflect.TypeVariable", "org.springframework.beans.support.SortDefinition", "javax.cache.configuration.OptionalFeature", "java.lang.invoke.LambdaForm$NamedFunction", "java.lang.reflect.ParameterizedType", "io.micrometer.core.instrument.DistributionSummary$Builder", "javax.servlet.FilterRegistration$Dynamic", "java.awt.desktop.PrintFilesEvent", "org.springframework.web.bind.annotation.PathVariable", "javax.servlet.FilterChain", "java.util.SortedSet", "java.awt.ItemSelectable", "javax.xml.transform.Result", "org.springframework.boot.SpringApplication", "java.net.InetAddress$InetAddressHolder", "sun.awt.AppContext", "java.util.function.ToLongFunction", "java.util.function.LongToDoubleFunction", "io.micrometer.core.instrument.Meter$Type", "jdk.internal.org.objectweb.asm.ClassVisitor", "javax.servlet.ServletRegistration$Dynamic", "java.awt.JobAttributes$DialogType", "java.awt.peer.DesktopPeer", "org.springframework.boot.ApplicationRunner", "java.awt.Composite", "java.sql.Timestamp", "sun.nio.ch.Interruptible", "sun.reflect.generics.tree.BaseType", "java.security.Provider", "java.nio.charset.CharsetEncoder", "org.springframework.core.env.MutablePropertySources", "java.io.DataInputStream", "jdk.internal.loader.Resource", "java.lang.ModuleLayer", "javax.swing.SwingConstants", "org.springframework.beans.PropertyAccessor", "sun.reflect.generics.tree.IntSignature", "java.lang.FunctionalInterface", "org.w3c.dom.NamedNodeMap", "java.util.Locale$Category", "sun.awt.ComponentFactory", "java.lang.reflect.GenericDeclaration", "org.springframework.core.convert.converter.Converter", "java.awt.color.ICC_Profile", "java.lang.invoke.BoundMethodHandle$SpeciesData", "java.lang.Package", "org.springframework.boot.Banner", "java.awt.Label", "java.lang.ref.Cleaner", "org.w3c.dom.DocumentType", "java.util.function.LongConsumer", "java.util.function.Consumer", "java.lang.invoke.LambdaForm$Name", "java.time.format.DateTimePrintContext", "jdk.internal.org.objectweb.asm.MethodVisitor", "java.time.format.DateTimeFormatter", "java.util.concurrent.ConcurrentHashMap$CollectionView", "java.lang.Class", "java.util.IntSummaryStatistics", "javassist.compiler.ast.Variable", "org.w3c.dom.ls.LSInput", "java.awt.dnd.DropTarget", "java.awt.Choice", "javax.xml.validation.ValidatorHandler", "java.util.concurrent.ConcurrentHashMap$Node", "org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer", "javax.validation.Valid", "java.awt.font.NumericShaper$Range", "java.sql.ResultSet", "java.nio.file.Watchable", "org.springframework.beans.TypeConverter", "org.springframework.core.style.ValueStyler", "javax.swing.ButtonModel", "org.w3c.dom.DOMImplementation", "javassist.compiler.TypeChecker", "org.springframework.validation.FieldError", "java.lang.reflect.AnnotatedType", "java.time.zone.ZoneOffsetTransition", "java.awt.PageAttributes$OriginType", "org.springframework.boot.SpringBootExceptionHandler", "java.time.chrono.Chronology", "java.awt.Transparency", "java.awt.geom.RectangularShape", "java.util.function.ObjLongConsumer", "io.micrometer.core.instrument.search.Search", "javax.swing.AncestorNotifier", "io.micrometer.core.instrument.Timer$Builder", "java.text.spi.DecimalFormatSymbolsProvider", "org.hibernate.service.UnknownUnwrapTypeException", "java.lang.invoke.VarHandle$TypesAndInvokers", "java.text.NumberFormat", "java.util.function.ToIntBiFunction", "java.net.FileNameMap", "java.lang.reflect.Parameter", "javax.accessibility.AccessibleText", "java.util.LinkedHashSet", "javassist.LoaderClassPath", "javassist.bytecode.ExceptionsAttribute", "org.springframework.context.annotation.Import", "jdk.internal.loader.Loader", "java.sql.DriverPropertyInfo", "java.awt.peer.DialogPeer", "java.awt.FontMetrics", "javax.servlet.http.HttpServletMapping", "java.nio.file.Paths", "org.slf4j.Marker", "java.sql.Statement", "javassist.compiler.ast.ArrayInit", "java.lang.ClassNotFoundException", "java.io.BufferedReader", "java.awt.im.InputMethodHighlight", "java.awt.event.ContainerEvent", "javassist.CtMethod", "javassist.compiler.ast.StringL", "java.util.concurrent.ScheduledFuture", "java.util.zip.Inflater", "javassist.compiler.ast.Pair", "java.lang.PublicMethods$MethodList", "org.springframework.boot.Banner$Mode", "java.util.function.IntPredicate", "java.lang.invoke.LambdaFormEditor", "sun.font.Font2DHandle", "org.springframework.core.env.Profiles", "java.lang.Class$AnnotationData", "java.time.OffsetTime", "io.micrometer.core.instrument.Tags", "javassist.bytecode.ExceptionTable", "java.awt.event.ItemEvent", "java.awt.desktop.QuitStrategy", "java.nio.CharBuffer", "java.lang.Thread$State", "javax.accessibility.AccessibleState", "java.awt.event.ComponentEvent", "java.text.Format$Field", "org.w3c.dom.Comment", "java.awt.AttributeValue", "java.util.List", "org.springframework.core.SerializableTypeWrapper$TypeProvider", "org.springframework.web.bind.annotation.InitBinder", "java.util.ResourceBundle$CacheKey", "java.awt.desktop.PrintFilesHandler", "java.util.AbstractSet", "java.lang.invoke.MethodHandleImpl$Intrinsic", "javassist.expr.NewExpr", "java.lang.Character$Subset", "java.lang.Iterable", "javax.naming.NameParser", "javassist.compiler.TokenId", "javax.swing.event.AncestorListener", "org.springframework.core.convert.TypeDescriptor", "javax.servlet.http.Cookie", "java.beans.PropertyChangeEvent", "org.springframework.beans.BeanMetadataElement", "javassist.bytecode.ClassFile", "java.awt.Container$EventTargetFilter", "java.nio.file.OpenOption", "org.springframework.beans.factory.NamedBean", "java.awt.Taskbar$Feature", "sun.reflect.generics.tree.TypeTree", "javax.swing.plaf.MenuBarUI", "sun.util.locale.BaseLocale", "java.nio.file.WatchService", "java.awt.PrintJob", "java.lang.constant.ClassDesc", "java.io.Closeable", "org.apache.commons.logging.Log", "java.security.Timestamp", "javax.cache.configuration.Configuration", "java.nio.channels.GatheringByteChannel", "java.util.jar.Manifest", "org.w3c.dom.Text", "javax.servlet.http.PushBuilder", "java.sql.SQLFeatureNotSupportedException", "org.springframework.boot.BootstrapRegistry$InstanceSupplier", "java.lang.annotation.Inherited", "org.springframework.beans.factory.annotation.Autowired", "java.nio.file.WatchEvent$Kind", "javassist.compiler.Lex", "java.util.concurrent.LinkedBlockingQueue$Node", "java.time.Duration", "java.awt.desktop.AboutEvent", "java.sql.Struct", "java.math.BigInteger", "java.time.ZoneOffset", "java.util.concurrent.locks.AbstractOwnableSynchronizer", "io.micrometer.core.instrument.distribution.CountAtBucket", "java.awt.dnd.DropTargetContext", "java.awt.font.GlyphJustificationInfo", "java.io.ObjectStreamClass$ClassDataSlot", "java.awt.peer.ComponentPeer", "java.nio.file.FileVisitor", "java.lang.module.ModuleDescriptor$Version", "java.util.concurrent.ThreadPoolExecutor$Worker", "javax.sql.CommonDataSource", "java.awt.Adjustable", "org.springframework.boot.ExitCodeGenerator", "java.util.function.DoubleFunction", "java.awt.event.AdjustmentListener", "java.util.Locale$IsoCountryCode", "org.xml.sax.Locator", "org.springframework.boot.BootstrapRegistryInitializer", "org.springframework.beans.factory.config.ConstructorArgumentValues", "org.springframework.beans.BeanMetadataAttributeAccessor", "javax.naming.Context", "javassist.compiler.ast.CondExpr", "java.awt.desktop.QuitEvent", "java.io.IOException", "org.springframework.context.Lifecycle", "javax.servlet.annotation.ServletSecurity", "java.util.concurrent.atomic.AtomicLong", "org.springframework.web.servlet.View", "javax.servlet.annotation.HttpConstraint", "java.util.function.LongUnaryOperator", "java.util.AbstractMap$SimpleEntry", "java.time.DayOfWeek", "org.springframework.boot.WebApplicationType", "sun.util.resources.TimeZoneNamesBundle", "sun.reflect.generics.visitor.Reifier", "java.util.ListIterator", "java.util.Date", "java.util.spi.CalendarNameProvider", "java.io.ObjectInputStream", "org.springframework.boot.ApplicationContextFactory", "java.awt.dnd.peer.DragSourceContextPeer", "sun.reflect.generics.tree.Signature", "java.util.Random", "java.awt.PointerInfo", "org.springframework.format.annotation.DateTimeFormat", "java.nio.channels.FileLock", "javax.swing.ComponentInputMap", "java.util.Locale$FilteringMode", "javax.xml.xpath.XPathEvaluationResult", "java.time.chrono.IsoChronology", "javax.cache.configuration.CacheEntryListenerConfiguration", "org.springframework.context.ConfigurableApplicationContext", "java.sql.RowIdLifetime", "org.springframework.data.repository.Repository", "org.springframework.core.MethodParameter", "javax.accessibility.AccessibleRelation", "java.util.zip.ZipEntry", "java.awt.datatransfer.Clipboard", "java.util.concurrent.SynchronousQueue", "java.awt.Menu", "java.nio.file.FileSystem", "jdk.internal.module.ModuleTarget", "sun.font.FontStrike", "java.awt.event.WindowEvent", "java.lang.ref.Reference", "java.awt.dnd.peer.DropTargetContextPeer", "org.springframework.beans.TypeConverterSupport", "java.text.AttributedCharacterIterator", "javax.swing.event.PopupMenuEvent", "io.micrometer.core.instrument.DistributionSummary", "sun.util.resources.LocaleData", "org.springframework.core.ResolvableType$VariableResolver", "java.io.ObjectInput", "java.util.Spliterator", "java.awt.desktop.PreferencesHandler", "java.lang.module.ModuleDescriptor", "java.awt.dnd.DropTarget$DropTargetAutoScroller", "javassist.compiler.ProceedHandler", "java.util.function.DoubleUnaryOperator", "java.util.concurrent.ConcurrentMap", "java.util.logging.Level", "java.lang.Thread$UncaughtExceptionHandler", "java.lang.annotation.Repeatable", "java.time.chrono.ChronoLocalDate", "java.lang.System$Logger", "javax.accessibility.AccessibleStateSet", "sun.reflect.generics.tree.LongSignature", "javax.persistence.JoinColumn", "sun.util.locale.provider.ResourceBundleBasedAdapter", "java.util.AbstractMap$SimpleImmutableEntry", "java.util.PrimitiveIterator", "java.util.concurrent.locks.Condition", "java.util.function.DoubleSupplier", "java.awt.datatransfer.FlavorListener", "java.awt.MenuComponent", "java.util.Comparator", "java.nio.channels.FileChannel", "java.lang.constant.MethodHandleDesc", "java.io.ObjectStreamConstants", "java.util.concurrent.ConcurrentSkipListMap$CSLMSpliterator", "java.awt.Conditional", "java.util.regex.Pattern$Qtype", "javassist.bytecode.ConstPool", "java.awt.peer.PopupMenuPeer", "org.springframework.cache.annotation.Cacheable", "java.awt.BufferCapabilities$FlipContents", "java.util.function.IntBinaryOperator", "java.util.AbstractQueue", "java.util.function.UnaryOperator", "java.util.DoubleSummaryStatistics", "java.nio.file.DirectoryStream", "java.io.DataOutputStream", "java.util.concurrent.RejectedExecutionHandler", "java.awt.event.TextListener", "javax.swing.event.ChangeListener", "java.awt.color.ICC_ColorSpace", "java.awt.Dialog", "org.springframework.context.PayloadApplicationEvent", "java.lang.Void", "io.micrometer.core.lang.Nullable", "org.springframework.validation.AbstractBindingResult", "io.micrometer.core.instrument.Gauge", "java.awt.datatransfer.ClipboardOwner", "java.io.Externalizable", "java.text.CharacterIterator", "java.lang.AssertionStatusDirectives", "java.net.Authenticator$RequestorType", "java.security.PrivilegedExceptionAction", "sun.security.util.Debug", "sun.java2d.cmm.Profile", "java.io.ObjectStreamClass$FieldReflector", "javax.swing.event.MenuKeyListener", "java.lang.invoke.VarForm", "org.springframework.core.io.InputStreamSource", "java.awt.datatransfer.MimeType", "org.springframework.core.env.PropertySource", "java.text.SimpleDateFormat", "java.nio.file.attribute.GroupPrincipal", "java.util.RandomAccess", "javax.swing.InputVerifier", "javassist.bytecode.StackMapTable", "java.awt.EventDispatchThread", "java.util.Map$Entry", "java.util.function.IntToDoubleFunction", "org.springframework.beans.factory.config.SingletonBeanRegistry", "java.io.BufferedWriter", "org.springframework.beans.factory.config.BeanFactoryPostProcessor", "java.awt.Window", "org.springframework.core.style.ToStringCreator", "java.io.FileOutputStream", "java.awt.desktop.AboutHandler", "java.lang.StackWalker$Option", "java.awt.desktop.QuitHandler", "java.io.File", "java.time.format.DecimalStyle", "java.time.temporal.TemporalAdjuster", "org.springframework.beans.SimpleTypeConverter", "java.lang.IllegalStateException", "javassist.compiler.AccessorMaker", "javassist.bytecode.ByteVector", "java.lang.invoke.VarHandle$AccessDescriptor", "java.lang.invoke.MethodHandles$Lookup$ClassFile", "java.lang.Byte", "sun.util.logging.PlatformLogger$Level", "java.sql.Wrapper", "java.awt.image.BufferedImage", "jdk.internal.org.objectweb.asm.Attribute", "org.springframework.context.ApplicationListener", "jdk.internal.org.objectweb.asm.Symbol", "org.springframework.beans.factory.config.BeanPostProcessor", "java.awt.SecondaryLoop", "java.time.OffsetDateTime", "javax.xml.xpath.XPathEvaluationResult$XPathResultType", "java.lang.reflect.Type", "io.micrometer.core.instrument.TimeGauge$1", "java.lang.reflect.Modifier", "java.util.concurrent.ThreadPoolExecutor", "java.awt.datatransfer.Transferable", "javax.swing.Popup", "java.util.HashMap", "org.springframework.stereotype.Controller", "java.nio.charset.CoderResult", "org.xml.sax.ContentHandler", "jdk.internal.perf.PerfCounter", "java.security.cert.CertPath", "java.lang.IllegalArgumentException", "java.util.regex.Pattern$LineEnding", "java.lang.NamedPackage", "org.xml.sax.SAXParseException", "java.awt.image.ColorModel", "java.lang.InterruptedException", "io.micrometer.core.instrument.MeterRegistry", "javax.servlet.FilterConfig", "java.awt.dnd.DragSourceDragEvent", "java.time.Clock", "java.sql.ShardingKey", "java.util.Collections", "java.nio.MappedByteBuffer", "java.awt.event.InputMethodListener", "java.text.Format", "java.util.logging.LogManager$LoggerContext", "org.springframework.validation.Validator", "javassist.bytecode.CodeIterator$Pointers", "java.util.Enumeration", "io.micrometer.core.instrument.Meter$Id", "java.util.concurrent.Future", "io.github.classgraph.ModulePathInfo", "org.xml.sax.ErrorHandler", "java.net.Proxy", "java.lang.invoke.LambdaFormEditor$TransformKey", "sun.util.calendar.Era", "java.lang.Thread", "java.awt.peer.ButtonPeer", "javax.persistence.ManyToMany", "java.util.logging.LogManager$LogNode", "java.awt.dnd.DragSourceDropEvent", "javax.accessibility.AccessibleEditableText", "javassist.ClassMap", "javax.servlet.RequestDispatcher", "java.nio.charset.CharsetDecoder", "java.awt.event.KeyEvent", "io.micrometer.core.instrument.search.RequiredSearch", "java.lang.invoke.LambdaFormEditor$Transform", "javax.xml.parsers.DocumentBuilderFactory", "java.awt.geom.GeneralPath", "java.lang.invoke.MethodHandle", "sun.util.resources.ParallelListResourceBundle", "jdk.internal.module.ServicesCatalog$ServiceProvider", "javax.accessibility.AccessibleRelationSet", "org.springframework.http.HttpStatus$Series", "java.awt.peer.MenuComponentPeer", "java.sql.DatabaseMetaData", "java.awt.image.ImageConsumer", "javax.persistence.Table", "java.time.zone.ZoneRules", "java.util.spi.CurrencyNameProvider", "javax.validation.constraints.Digits", "org.springframework.stereotype.Indexed", "javassist.compiler.ast.InstanceOfExpr", "java.text.Collator", "java.util.stream.Collectors$1PairBox", "org.springframework.beans.BeansException", "sun.util.calendar.Gregorian", "io.github.classgraph.ClassGraphException", "java.util.concurrent.ExecutionException", "java.util.function.IntToLongFunction", "java.util.concurrent.ConcurrentHashMap$KeySetView", "sun.reflect.generics.tree.ByteSignature", "javax.persistence.FetchType", "java.beans.BeanProperty", "jdk.internal.reflect.FieldAccessor", "java.lang.invoke.LambdaMetafactory", "jdk.internal.reflect.MethodAccessor", "java.awt.event.ItemListener", "javax.servlet.AsyncEvent", "java.sql.Array", "javax.swing.plaf.MenuItemUI", "javassist.CtField$Initializer", "java.util.EventObject", "java.awt.PopupMenu", "java.awt.geom.PathIterator", "io.micrometer.core.instrument.AbstractTimerBuilder", "java.nio.IntBuffer", "java.awt.peer.RobotPeer", "java.awt.image.renderable.RenderableImage", "java.lang.reflect.Method", "java.awt.event.WindowStateListener", "javax.accessibility.AccessibleValue", "java.util.NavigableMap", "java.util.jar.Attributes", "java.util.Objects", "java.util.stream.Collectors$1OptionalBox", "java.awt.peer.MenuItemPeer", "java.util.stream.IntStream", "io.micrometer.core.instrument.LongTaskTimer", "java.awt.Insets", "org.springframework.beans.factory.config.AutowireCapableBeanFactory", "java.awt.image.BufferedImageOp", "java.lang.constant.MethodTypeDesc", "java.awt.peer.ScrollPanePeer", "java.nio.charset.CodingErrorAction", "java.util.spi.CalendarDataProvider", "java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator", "java.util.function.LongFunction", "java.time.Month", "java.nio.DoubleBuffer", "java.lang.StackWalker$StackFrame", "java.text.DecimalFormat", "org.springframework.core.convert.converter.ConverterFactory", "java.awt.EventFilter$FilterAction", "jdk.internal.org.objectweb.asm.RecordComponentVisitor", "java.net.ContentHandler", "org.springframework.boot.SpringApplicationShutdownHandlers", "java.awt.event.ContainerListener", "java.nio.file.FileVisitOption", "org.springframework.web.bind.WebDataBinder", "java.util.StringJoiner", "javassist.expr.Cast", "org.springframework.core.ParameterNameDiscoverer", "org.springframework.core.convert.support.ConfigurableConversionService", "java.io.ObjectOutputStream$PutField", "sun.util.logging.PlatformLogger$Bridge", "java.nio.channels.FileChannel$MapMode", "javassist.expr.MethodCall", "java.math.BigDecimal", "java.lang.Character", "java.sql.ParameterMetaData", "java.util.spi.LocaleNameProvider", "java.awt.Event", "javassist.compiler.JvstTypeChecker", "javax.naming.InitialContext", "java.lang.invoke.MethodHandles$Lookup", "java.text.NumberFormat$Style", "jdk.internal.loader.AbstractClassLoaderValue$Sub", "jdk.internal.org.objectweb.asm.FieldVisitor", "java.nio.file.attribute.FileAttribute", "javassist.compiler.ast.BinExpr", "java.awt.geom.Path2D$Float", "java.lang.Exception", "sun.reflect.generics.factory.GenericsFactory", "java.util.function.ToDoubleBiFunction", "sun.invoke.util.Wrapper", "java.beans.PropertyChangeListener", "java.awt.desktop.AppEvent", "java.sql.RowId", "java.lang.invoke.ClassSpecializer", "io.micrometer.core.instrument.Counter$Builder", "java.security.AccessController", "java.text.spi.BreakIteratorProvider", "java.lang.reflect.AnnotatedElement", "java.awt.event.TextEvent", "org.springframework.boot.autoconfigure.AutoConfigurationPackage", "java.util.regex.Pattern$CharProperty", "java.util.concurrent.Callable", "java.lang.invoke.TypeDescriptor$OfField", "java.util.ArrayList", "java.util.HashMap$TreeNode", "jdk.internal.org.objectweb.asm.ByteVector", "java.text.Format$FieldDelegate", "java.awt.AWTKeyStroke", "java.lang.module.ResolvedModule", "io.micrometer.core.instrument.distribution.HistogramSnapshot", "org.springframework.format.Formatter", "io.micrometer.core.instrument.LongTaskTimer$Sample", "javax.swing.ActionMap", "org.springframework.boot.autoconfigure.SpringBootApplication", "javax.swing.ButtonGroup", "java.awt.font.GlyphVector", "java.awt.peer.MenuPeer", "java.io.FileFilter", "org.springframework.boot.DefaultBootstrapContext", "java.lang.reflect.InvocationHandler", "javax.swing.JLayeredPane", "org.springframework.beans.factory.HierarchicalBeanFactory", "java.net.SocketAddress", "sun.util.calendar.CalendarDate", "org.springframework.beans.PropertyEditorRegistrySupport", "java.beans.ConstructorProperties", "java.awt.image.ImageObserver", "java.awt.JobAttributes", "java.time.LocalTime", "jdk.internal.reflect.ConstructorAccessor", "java.lang.invoke.MethodHandleInfo", "org.springframework.beans.PropertyEditorRegistrar", "java.text.DateFormat", "java.time.DateTimeException", "java.lang.module.ModuleDescriptor$Opens", "javax.swing.JMenu$WinListener", "java.util.regex.PatternSyntaxException", "java.awt.FocusTraversalPolicy", "org.springframework.core.metrics.StartupStep$Tags", "org.springframework.context.annotation.Configuration", "sun.java2d.StateTrackable$State", "java.lang.Class$ReflectionData", "org.springframework.core.io.ProtocolResolver", "org.xml.sax.SAXException", "java.time.chrono.IsoEra", "sun.reflect.generics.tree.FloatSignature", "java.lang.invoke.VarHandle$AccessMode", "java.util.regex.Pattern", "sun.util.locale.LocaleExtensions", "java.awt.image.DataBuffer", "javax.swing.TransferHandler$TransferSupport", "java.awt.Rectangle", "java.io.ObjectStreamClass", "java.awt.font.GraphicAttribute", "java.beans.Transient", "java.security.CodeSigner", "javax.naming.spi.ObjectFactory", "java.lang.module.ModuleDescriptor$Requires", "sun.reflect.generics.tree.SimpleClassTypeSignature", "java.util.LongSummaryStatistics", "java.awt.dnd.DragGestureListener", "java.awt.geom.Line2D", "java.awt.Desktop$Action", "org.springframework.web.bind.annotation.ResponseBody", "java.security.PermissionCollection", "java.lang.SecurityManager", "java.awt.desktop.OpenURIHandler", "java.util.stream.LongStream$Builder", "org.springframework.stereotype.Component", "java.awt.event.InputMethodEvent", "javax.swing.ArrayTable", "javax.servlet.ReadListener", "java.util.stream.BaseStream", "java.util.logging.LoggingMXBean", "java.io.InputStream", "sun.awt.datatransfer.ToolkitThreadBlockedHandler", "java.lang.ThreadGroup", "jdk.internal.reflect.ConstantPool", "java.util.function.DoubleConsumer", "java.time.temporal.ValueRange", "java.awt.event.MouseWheelEvent", "java.util.Map", "org.slf4j.event.Level", "io.github.classgraph.ModuleRef", "java.sql.NClob", "sun.reflect.generics.tree.FormalTypeParameter", "java.awt.GraphicsConfiguration", "java.util.logging.Filter", "java.lang.invoke.LambdaForm$BasicType", "java.util.concurrent.ConcurrentNavigableMap", "org.springframework.core.metrics.ApplicationStartup", "java.util.function.ObjDoubleConsumer", "java.lang.StackWalker$ExtendedOption", "java.awt.desktop.FilesEvent", "java.util.Spliterator$OfInt", "java.time.format.DateTimeParseException", "org.springframework.core.AttributeAccessor", "java.util.stream.Stream", "java.awt.MenuItem", "java.lang.invoke.CallSite", "java.lang.ClassLoader", "java.sql.Ref", "sun.reflect.generics.tree.Tree", "java.lang.invoke.MethodHandles$Lookup$ClassOption", "org.springframework.boot.BootstrapRegistry", "org.w3c.dom.DOMConfiguration", "javax.servlet.AsyncContext", "java.util.PrimitiveIterator$OfLong", "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder", "java.time.temporal.TemporalAmount", "java.awt.peer.CheckboxPeer", "java.util.function.IntFunction", "org.springframework.context.MessageSource", "java.lang.SafeVarargs", "org.springframework.beans.MutablePropertyValues", "io.micrometer.core.instrument.FunctionTimer$1", "jdk.internal.loader.NativeLibrary", "org.springframework.http.HttpStatus", "org.springframework.validation.AbstractPropertyBindingResult", "javax.validation.Constraint", "java.security.ProtectionDomain", "java.nio.file.FileTreeWalker$EventType", "java.nio.channels.WritableByteChannel", "java.awt.GraphicsConfigTemplate", "java.nio.FloatBuffer", "java.util.logging.LogManager", "org.springframework.data.annotation.QueryAnnotation", "javassist.compiler.ast.CastExpr", "javax.swing.event.MenuDragMouseEvent", "javax.servlet.AsyncListener", "org.springframework.validation.ObjectError", "javassist.bytecode.ConstInfo", "java.lang.ThreadLocal$ThreadLocalMap$Entry", "java.awt.image.WritableRenderedImage", "org.springframework.core.convert.converter.GenericConverter", "org.springframework.core.NestedRuntimeException", "org.springframework.core.io.ResourceLoader", "java.util.zip.ZipException", "java.util.TimeZone", "java.util.Collection", "org.springframework.validation.DataBinder", "io.micrometer.core.instrument.config.MeterFilterReply", "java.util.concurrent.ConcurrentHashMap", "javax.servlet.MultipartConfigElement", "java.util.function.BinaryOperator", "javassist.CtField", "org.springframework.web.servlet.ModelAndView", "jdk.internal.reflect.ConstantPool$Tag", "java.util.Queue", "java.time.temporal.Temporal", "java.sql.ResultSetMetaData", "java.time.chrono.ChronoPeriod", "javassist.compiler.ast.Member", "java.util.concurrent.AbstractExecutorService", "javax.servlet.ServletRegistration", "javax.swing.SwingContainer", "org.w3c.dom.Attr", "java.util.PrimitiveIterator$OfDouble", "javax.servlet.ServletOutputStream", "java.util.zip.DataFormatException", "java.awt.event.HierarchyBoundsListener", "java.util.LinkedList", "java.util.function.IntSupplier", "java.nio.channels.ReadableByteChannel", "org.slf4j.Logger", "javassist.compiler.ast.Expr", "javax.naming.Name", "java.io.FileInputStream", "java.sql.Date", "javax.xml.xpath.XPathFactory", "java.util.AbstractMap", "org.w3c.dom.Element", "java.awt.PageAttributes$ColorType", "io.micrometer.core.instrument.config.NamingConvention", "org.springframework.context.annotation.Bean", "org.springframework.core.io.support.ResourcePatternResolver", "java.sql.Blob", "org.springframework.context.ApplicationContextInitializer", "javax.xml.bind.annotation.XmlElement", "org.springframework.transaction.annotation.Transactional", "java.awt.desktop.QuitResponse", "sun.util.locale.provider.LocaleProviderAdapter", "jdk.internal.org.objectweb.asm.Handle", "java.lang.System", "io.micrometer.core.instrument.TimeGauge", "org.springframework.format.annotation.DateTimeFormat$ISO", "java.awt.peer.MenuBarPeer", "java.net.InetAddress", "javassist.bytecode.CodeAttribute", "java.util.regex.Matcher", "java.text.FieldPosition", "java.awt.desktop.OpenFilesEvent", "javax.cache.Cache", "java.awt.dnd.DropTargetDropEvent", "java.awt.image.IndexColorModel", "sun.util.calendar.BaseCalendar$Date", "org.springframework.context.MessageSourceResolvable", "io.micrometer.core.instrument.Counter", "java.awt.font.LineMetrics", "io.micrometer.core.instrument.distribution.pause.PauseDetector", "org.springframework.validation.AbstractErrors", "javassist.expr.Expr", "javax.xml.xpath.XPathFunctionResolver", "java.io.FilterOutputStream", "java.io.Reader", "java.awt.MenuBar", "java.beans.PropertyDescriptor", "org.hibernate.HibernateException", "org.springframework.beans.PropertyValues", "java.lang.Double", "javassist.CtMember", "org.springframework.core.ParameterizedTypeReference", "java.lang.reflect.WildcardType", "java.nio.file.spi.FileSystemProvider", "java.lang.ref.ReferenceQueue", "javax.servlet.WriteListener", "java.awt.BufferCapabilities", "javassist.compiler.SymbolTable", "java.lang.Number", "java.awt.peer.CanvasPeer", "javassist.expr.ExprEditor", "java.util.zip.ZipConstants", "java.io.DataOutput", "javax.swing.JButton", "java.lang.invoke.BoundMethodHandle$Specializer", "java.util.regex.Pattern$TreeInfo", "io.micrometer.core.instrument.Meter$Builder", "java.awt.PageAttributes$MediaType", "java.awt.geom.Path2D", "java.lang.constant.Constable", "java.time.chrono.ChronoZonedDateTime", "javax.persistence.Transient", "java.awt.event.MouseMotionListener", "jdk.internal.reflect.ReflectionFactory", "java.beans.PropertyChangeSupport", "java.util.HashMap$Node", "java.awt.im.InputContext", "java.util.jar.JarFile", "org.springframework.ui.ModelMap", "java.time.format.DateTimeFormatterBuilder$CompositePrinterParser", "org.w3c.dom.EntityReference", "org.springframework.context.support.DefaultMessageSourceResolvable", "jdk.internal.access.foreign.MemorySegmentProxy", "java.math.RoundingMode", "java.awt.Shape", "javax.servlet.Registration", "java.lang.IllegalAccessException", "sun.awt.geom.Crossings", "java.awt.datatransfer.FlavorEvent", "java.util.Properties$LineReader", "javax.swing.Icon", "java.util.concurrent.LinkedBlockingQueue", "javax.servlet.ServletResponse", "javassist.bytecode.MethodInfo", "java.io.ObjectInputFilter", "javassist.expr.FieldAccess", "org.springframework.boot.BootstrapRegistry$Scope", "sun.java2d.cmm.ProfileDeferralInfo", "sun.util.spi.CalendarProvider", "org.springframework.web.bind.annotation.RequestMapping", "java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator", "java.awt.peer.FramePeer", "org.springframework.beans.factory.ObjectProvider", "java.lang.invoke.SerializedLambda", "javax.sql.DataSource", "sun.reflect.generics.tree.BottomSignature", "org.springframework.validation.MessageCodesResolver", "java.util.regex.Pattern$BmpCharPredicate", "sun.reflect.generics.tree.ReturnType", "javax.swing.JComponent", "java.awt.event.AdjustmentEvent", "java.lang.Class$EnclosingMethodInfo", "javassist.compiler.JvstCodeGen", "java.util.Iterator", "org.springframework.beans.PropertyValue", "sun.font.CreatedFontTracker", "java.util.jar.Manifest$FastInputStream", "jdk.internal.org.objectweb.asm.AnnotationVisitor", "sun.reflect.generics.tree.DoubleSignature", "java.util.concurrent.ConcurrentSkipListMap", "java.util.LinkedHashMap$Entry", "org.hibernate.service.spi.Wrapped", "java.lang.invoke.LambdaForm$Kind", "org.springframework.beans.ConfigurablePropertyAccessor", "javassist.compiler.ast.ASTList", "org.springframework.web.bind.annotation.Mapping", "org.springframework.beans.factory.config.BeanExpressionResolver" ],
        "phantomClasses" : [ "BOOT-INF.classes.org.springframework.samples.petclinic.owner.PetType", "aj.org.objectweb.asm.ClassWriter", "META-INF.versions.9.org.h2.util.CurrentTimestamp", "BOOT-INF.classes.org.springframework.samples.petclinic.system.CrashController", "aj.org.objectweb.asm.Constants", "com.zaxxer.hikari.pool.HikariPool", "io.prometheus.client.Summary$Child", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.PetController", "META-INF.versions.10.org.h2.util.NetUtils2", "nonapi.io.github.classgraph.fastzipfilereader.NestedJarHandler$2", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.PetTypeFormatter", "com.codahale.metrics.Gauge", "com.codahale.metrics.Histogram", "com.codahale.metrics.Metric", "BOOT-INF.classes.org.springframework.samples.petclinic.vet.Specialty", "com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$ConnectivityHealthCheck", "BOOT-INF.classes.org.springframework.samples.petclinic.vet.VetRepository", "META-INF.versions.9.module-info", "com.codahale.metrics.health.HealthCheck", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.Owner", "BOOT-INF.classes.org.springframework.samples.petclinic.visit.Visit", "META-INF.versions.9.org.h2.util.Bits", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.OwnerRepository", "META-INF.versions.9.javax.xml.bind.ModuleUtil", "BOOT-INF.classes.org.springframework.samples.petclinic.model.BaseEntity", "META-INF.versions.9.org.apache.logging.log4j.util.internal.DefaultObjectInputFilter", "com.zaxxer.hikari.pool.PoolBase", "javax.annotation.meta.TypeQualifierDefault", "BOOT-INF.classes.org.springframework.samples.petclinic.model.NamedEntity", "com.codahale.metrics.Meter", "io.prometheus.client.GaugeMetricFamily", "io.prometheus.client.Histogram", "BOOT-INF.classes.org.springframework.samples.petclinic.system.WelcomeController", "io.prometheus.client.SimpleCollector$Builder", "aj.org.objectweb.asm.ClassReader", "com.codahale.metrics.health.HealthCheck$Result", "io.prometheus.client.Counter$Builder", "META-INF.versions.9.org.apache.logging.log4j.util.ProcessIdUtil", "io.prometheus.client.CollectorRegistry", "BOOT-INF.classes.org.springframework.samples.petclinic.vet.Vet", "io.prometheus.client.Summary", "io.prometheus.client.Histogram$Child", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.VisitController", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.PetValidator", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.PetRepository", "com.codahale.metrics.health.HealthCheckRegistry", "BOOT-INF.classes.org.springframework.samples.petclinic.vet.VetController", "javax.annotation.Nonnull", "com.codahale.metrics.Timer", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.OwnerController", "com.codahale.metrics.MetricRegistry", "BOOT-INF.classes.org.springframework.samples.petclinic.PetClinicApplication", "io.prometheus.client.Summary$Builder", "BOOT-INF.classes.org.springframework.samples.petclinic.system.CacheConfiguration", "META-INF.versions.11.module-info", "BOOT-INF.classes.org.springframework.samples.petclinic.visit.VisitRepository", "META-INF.versions.9.com.sun.istack.logging.StackHelper", "BOOT-INF.classes.org.springframework.samples.petclinic.model.Person", "io.prometheus.client.Histogram$Builder", "META-INF.versions.9.org.apache.logging.log4j.util.StackLocator", "BOOT-INF.classes.org.springframework.samples.petclinic.vet.Vets", "META-INF.versions.9.com.sun.xml.bind.StackHelper", "io.prometheus.client.Collector", "META-INF.versions.9.org.apache.logging.log4j.util.Base64Util", "io.prometheus.client.Counter", "com.codahale.metrics.MetricFilter", "BOOT-INF.classes.org.springframework.samples.petclinic.owner.Pet", "com.codahale.metrics.Snapshot", "io.prometheus.client.Counter$Child", "nonapi.io.github.classgraph.fastzipfilereader.FastZipEntry" ],
        "methodCount" : 27659,
        "methodWithBodyCount" : 2654,
        "fileCount" : 1,
        "dangerousCalls" : [ {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 102,
              "snippet" : {
                "text" : "$stack0 = $stack0.execute(sql, autoGeneratedKeys);    // Java line 102"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 487,
              "snippet" : {
                "text" : "$stack0.error($stack1, driverClassName, $stack3);    // Java line 487"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "ssrf",
          "location" : {
            "artifactLocation" : {
              "uri" : "NestedJarHandler.java"
            },
            "region" : {
              "startLine" : 515,
              "snippet" : {
                "text" : "$local4 = url.openConnection();    // Java line 515"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 167,
              "snippet" : {
                "text" : "$stack0 = $stack0.execute(sql, columnNames);    // Java line 167"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ConcurrentBag.java"
            },
            "region" : {
              "startLine" : 315,
              "snippet" : {
                "text" : "$stack0.warn($stack1, bagEntry);    // Java line 315"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "DriverDataSource.java"
            },
            "region" : {
              "startLine" : 70,
              "snippet" : {
                "text" : "$stack0.warn($stack1, driverClassName);    // Java line 70"
              }
            }
          }
        }, {
          "ruleId" : "xxe",
          "location" : {
            "artifactLocation" : {
              "uri" : "VersionFinder.java"
            },
            "region" : {
              "startLine" : 224,
              "snippet" : {
                "text" : "doc = $stack0.parse(is);    // Java line 224"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1146,
              "snippet" : {
                "text" : "$stack0.<init>(propFile);    // Java line 1146"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 330,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareCall(sql, resultSetType, concurrency, holdability);    // Java line 330"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ModuleFinder.java"
            },
            "region" : {
              "startLine" : 236,
              "snippet" : {
                "text" : "moduleLayerClass = Class.forName($stack0);    // Java line 236"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyLeakTask.java"
            },
            "region" : {
              "startLine" : 84,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 84"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 162,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 162"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 337,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql);    // Java line 337"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 183,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate(sql);    // Java line 183"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1088,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 1088"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 885,
              "snippet" : {
                "text" : "$stack0.error($stack1, exceptionOverrideClassName, $stack3);    // Java line 885"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareCall($local1, $local2, $local3, $local4);"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 157,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 157"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 156,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 156"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "FileUtils.java"
            },
            "region" : {
              "startLine" : 386,
              "snippet" : {
                "text" : "$local0 = Class.forName($stack0);    // Java line 386"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "NestedJarHandler.java"
            },
            "region" : {
              "startLine" : 852,
              "snippet" : {
                "text" : "$stack2.<init>(tempFile);    // Java line 852"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "JBossClassLoaderHandler.java"
            },
            "region" : {
              "startLine" : 115,
              "snippet" : {
                "text" : "$stack0.<init>($stack2, $local8);    // Java line 115"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 163,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 163"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 123,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 123"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 80,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 80"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 112,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 112"
              }
            }
          }
        }, {
          "ruleId" : "crypto-weak-randomness",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1178,
              "snippet" : {
                "text" : "$local3.nextInt($stack3);    // Java line 1178"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "DriverDataSource.java"
            },
            "region" : {
              "startLine" : 97,
              "snippet" : {
                "text" : "$stack0.warn($stack1, driverClassName, e);    // Java line 97"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1042,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 1042"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "FileUtils.java"
            },
            "region" : {
              "startLine" : 364,
              "snippet" : {
                "text" : "$stack0 = Class.forName($stack0);    // Java line 364"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "NestedJarHandler.java"
            },
            "region" : {
              "startLine" : 185,
              "snippet" : {
                "text" : "$stack0.<init>(nestedJarPath);    // Java line 185"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 372,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql, columnNames);    // Java line 372"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "NestedJarHandler.java"
            },
            "region" : {
              "startLine" : 532,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 532"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 146,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 146"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1024,
              "snippet" : {
                "text" : "$stack0.error($stack1, $stack2);    // Java line 1024"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "LogNode.java"
            },
            "region" : {
              "startLine" : 132,
              "snippet" : {
                "text" : "$stack0.info($stack1);    // Java line 132"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1066,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1066"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 483,
              "snippet" : {
                "text" : "driverClass = $stack0.loadClass(driverClassName);    // Java line 483"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 121,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 121"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "LogNode.java"
            },
            "region" : {
              "startLine" : 448,
              "snippet" : {
                "text" : "$stack0.info(logOutput);    // Java line 448"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1011,
              "snippet" : {
                "text" : "$stack0.error($stack1, $stack2);    // Java line 1011"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 154,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 154"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 151,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeUpdate(sql, columnNames);    // Java line 151"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 82,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 82"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConnectionProvider.java"
            },
            "region" : {
              "startLine" : 70,
              "snippet" : {
                "text" : "$stack0.warn($stack1);    // Java line 70"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "WhiteBlackList.java"
            },
            "region" : {
              "startLine" : 571,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 571"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "FileUtils.java"
            },
            "region" : {
              "startLine" : 362,
              "snippet" : {
                "text" : "$stack0 = Class.forName($stack0);    // Java line 362"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 182,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 182"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 145,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 145"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyLeakTask.java"
            },
            "region" : {
              "startLine" : 91,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2, $stack3);    // Java line 91"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ConcurrentBag.java"
            },
            "region" : {
              "startLine" : 235,
              "snippet" : {
                "text" : "$stack0.warn($stack1, bagEntry);    // Java line 235"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0.addBatch($local1);"
              }
            }
          }
        }, {
          "ruleId" : "ssrf",
          "location" : {
            "artifactLocation" : {
              "uri" : "NestedJarHandler.java"
            },
            "region" : {
              "startLine" : 521,
              "snippet" : {
                "text" : "$stack0 = url.openConnection();    // Java line 521"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1084,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1084"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 135,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeUpdate(sql, autoGeneratedKeys);    // Java line 135"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 68,
              "snippet" : {
                "text" : "$stack0 = Class.forName($stack0);    // Java line 68"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 323,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareCall(sql, resultSetType, concurrency);    // Java line 323"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 881,
              "snippet" : {
                "text" : "overrideClass = $stack0.loadClass(exceptionOverrideClassName);    // Java line 881"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "VersionFinder.java"
            },
            "region" : {
              "startLine" : 223,
              "snippet" : {
                "text" : "is = Files.newInputStream(pom, $stack1);    // Java line 223"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 152,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 152"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 207,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate(sql, columnNames);    // Java line 207"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 54,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 54"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 358,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql, resultSetType, concurrency, holdability);    // Java line 358"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "ClasspathOrder.java"
            },
            "region" : {
              "startLine" : 282,
              "snippet" : {
                "text" : "$stack0.<init>($local7);    // Java line 282"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "PropertyElf.java"
            },
            "region" : {
              "startLine" : 41,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 41"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 94,
              "snippet" : {
                "text" : "$stack0 = $stack0.execute(sql);    // Java line 94"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1145,
              "snippet" : {
                "text" : "$stack0.<init>(propertyFileName);    // Java line 1145"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "UtilityElf.java"
            },
            "region" : {
              "startLine" : 94,
              "snippet" : {
                "text" : "$local3 = $stack0.loadClass(className);    // Java line 94"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariPool.java"
            },
            "region" : {
              "startLine" : 813,
              "snippet" : {
                "text" : "$stack0.error($stack1, $local1);    // Java line 813"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ConcurrentBag.java"
            },
            "region" : {
              "startLine" : 371,
              "snippet" : {
                "text" : "$stack0.info($stack1);    // Java line 371"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 199,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate(sql, columnIndexes);    // Java line 199"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "JSONDeserializer.java"
            },
            "region" : {
              "startLine" : 83,
              "snippet" : {
                "text" : "$stack0 = Class.forName($local5);    // Java line 83"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1028,
              "snippet" : {
                "text" : "$stack0.error($stack1, $stack2);    // Java line 1028"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 142,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 142"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 117,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 117"
              }
            }
          }
        }, {
          "ruleId" : "xpath-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "VersionFinder.java"
            },
            "region" : {
              "startLine" : 226,
              "snippet" : {
                "text" : "$stack0 = $stack0.compile($stack1);    // Java line 226"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1092,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1092"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1054,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1054"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "PoolEntry.java"
            },
            "region" : {
              "startLine" : 185,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 185"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 155,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 155"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 71,
              "snippet" : {
                "text" : "stackWalkerClass = Class.forName($stack0);    // Java line 71"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 122,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 122"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 164,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 164"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareCall($local1);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 351,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql, resultSetType, concurrency);    // Java line 351"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariPool.java"
            },
            "region" : {
              "startLine" : 780,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 780"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareCall($local1, $local2, $local3);"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 57,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 57"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "PropertyElf.java"
            },
            "region" : {
              "startLine" : 134,
              "snippet" : {
                "text" : "logger.error($stack1, propName, $stack3);    // Java line 134"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "FastPathResolver.java"
            },
            "region" : {
              "startLine" : 43,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 43"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 110,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 110"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareStatement($local1);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 192,
              "snippet" : {
                "text" : "$stack1 = Class.forName($stack1);    // Java line 192"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0.addBatch($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "PropertyElf.java"
            },
            "region" : {
              "startLine" : 167,
              "snippet" : {
                "text" : "logger.error($stack1, $stack2);    // Java line 167"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0.addBatch($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 352,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 352"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareStatement($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "DriverDataSource.java"
            },
            "region" : {
              "startLine" : 86,
              "snippet" : {
                "text" : "$local7 = $stack0.loadClass(driverClassName);    // Java line 86"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "JavassistProxyFactory.java"
            },
            "region" : {
              "startLine" : 260,
              "snippet" : {
                "text" : "$stack0 = Class.forName(cn);    // Java line 260"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1048,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1048"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 66,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 66"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "OwnerController.java"
            },
            "region" : {
              "startLine" : 165,
              "snippet" : {
                "text" : "statement.execute($stack1);    // Java line 165"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 970,
              "snippet" : {
                "text" : "$local3 = threadContextClassLoader.loadClass(driverClassName);    // Java line 970"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 350,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 350"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 141,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 141"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 118,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 118"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "DriverDataSource.java"
            },
            "region" : {
              "startLine" : 76,
              "snippet" : {
                "text" : "$local7 = threadContextClassLoader.loadClass(driverClassName);    // Java line 76"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 51,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 51"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 316,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareCall(sql);    // Java line 316"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 365,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql, columnIndexes);    // Java line 365"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 119,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeUpdate(sql);    // Java line 119"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 355,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, e);    // Java line 355"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ConcurrentBag.java"
            },
            "region" : {
              "startLine" : 205,
              "snippet" : {
                "text" : "$stack0.info($stack1);    // Java line 205"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ConcurrentBag.java"
            },
            "region" : {
              "startLine" : 229,
              "snippet" : {
                "text" : "$stack0.warn($stack1, bagEntry);    // Java line 229"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 120,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 120"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareStatement($local1, $local2, $local3, $local4);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariPool.java"
            },
            "region" : {
              "startLine" : 788,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 788"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 153,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 153"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 67,
              "snippet" : {
                "text" : "stackWalkerOptionClass = Class.forName($stack0);    // Java line 67"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1, $local2);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyConnection.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.prepareStatement($local1, $local2, $local3);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ReflectionUtils.java"
            },
            "region" : {
              "startLine" : 405,
              "snippet" : {
                "text" : "$stack0 = Class.forName(className);    // Java line 405"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 115,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 115"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 110,
              "snippet" : {
                "text" : "resultSet = $stack0.executeQuery(sql);    // Java line 110"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 129,
              "snippet" : {
                "text" : "$stack0.<init>(javaExtDir);    // Java line 129"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 74,
              "snippet" : {
                "text" : "$stack0 = Class.forName($stack0);    // Java line 74"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "FileUtils.java"
            },
            "region" : {
              "startLine" : 382,
              "snippet" : {
                "text" : "$local0 = Class.forName($stack0);    // Java line 382"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 60,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 60"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 119,
              "snippet" : {
                "text" : "$stack0.<init>($local1, $stack3);    // Java line 119"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 111,
              "snippet" : {
                "text" : "$stack0.<init>($local2, $stack3);    // Java line 111"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 105,
              "snippet" : {
                "text" : "$stack0.<init>(javaHome);    // Java line 105"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 344,
              "snippet" : {
                "text" : "$stack2 = $stack2.prepareStatement(sql, autoGeneratedKeys);    // Java line 344"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1017,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1017"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 191,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate(sql, autoGeneratedKeys);    // Java line 191"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1071,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1071"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "UtilityElf.java"
            },
            "region" : {
              "startLine" : 70,
              "snippet" : {
                "text" : "$local2 = Class.forName(className);    // Java line 70"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 143,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeUpdate(sql, columnIndexes);    // Java line 143"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 147,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 147"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "CallStackReader.java"
            },
            "region" : {
              "startLine" : 65,
              "snippet" : {
                "text" : "$local0 = Class.forName($stack0);    // Java line 65"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyConnection.java"
            },
            "region" : {
              "startLine" : 229,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 229"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.execute($local1);"
              }
            }
          }
        }, {
          "ruleId" : "reflection-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "PropertyElf.java"
            },
            "region" : {
              "startLine" : 158,
              "snippet" : {
                "text" : "$stack5 = Class.forName($stack5);    // Java line 158"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1060,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1060"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 159,
              "snippet" : {
                "text" : "$stack0 = $stack0.execute(sql, columnIndexes);    // Java line 159"
              }
            }
          }
        }, {
          "ruleId" : "path-traversal",
          "location" : {
            "artifactLocation" : {
              "uri" : "SystemJarFinder.java"
            },
            "region" : {
              "startLine" : 140,
              "snippet" : {
                "text" : "$stack0.<init>($stack2);    // Java line 140"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "PoolEntry.java"
            },
            "region" : {
              "startLine" : 180,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2, $stack3);    // Java line 180"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $stack0.executeLargeUpdate($local1);"
              }
            }
          }
        }, {
          "ruleId" : "sql-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariDataSource.java"
            },
            "region" : {
              "startLine" : 123,
              "snippet" : {
                "text" : "$stack0.info($stack1, $stack2);    // Java line 123"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1006,
              "snippet" : {
                "text" : "$stack0.warn($stack1, $stack2);    // Java line 1006"
              }
            }
          }
        }, {
          "ruleId" : "log-injection",
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariConfig.java"
            },
            "region" : {
              "startLine" : 1181,
              "snippet" : {
                "text" : "$stack0.info($stack1, buf);    // Java line 1181"
              }
            }
          }
        }, {
          "ruleId" : "redos",
          "location" : {
            "artifactLocation" : {
              "uri" : "JarUtils.java"
            },
            "region" : {
              "startLine" : 63,
              "snippet" : {
                "text" : "$stack0 = Pattern.compile($stack0);    // Java line 63"
              }
            }
          }
        } ],
        "untrustedDataFlows" : [ {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.getResultSet();"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / petId"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / visit**"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.getResultSet();"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery();"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 213,
              "snippet" : {
                "text" : "resultSet = $stack0.getResultSet();    // Java line 213"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / result"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.getResultSet();"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyStatement.java"
            },
            "region" : {
              "startLine" : 110,
              "snippet" : {
                "text" : "resultSet = $stack0.executeQuery(sql);    // Java line 110"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery();"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / model**"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "ProxyPreparedStatement.java"
            },
            "region" : {
              "startLine" : 52,
              "snippet" : {
                "text" : "resultSet = $stack0.executeQuery();    // Java line 52"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / owner**"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / pet**"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : ""
            },
            "region" : {
              "snippet" : {
                "text" : "TODO - no entry point / ownerId"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        }, {
          "location" : {
            "artifactLocation" : {
              "uri" : "HikariProxyCallableStatement.java"
            },
            "region" : {
              "startLine" : -1,
              "snippet" : {
                "text" : "$stack0 = $local0.executeQuery($local1);"
              }
            }
          },
          "entryPoint" : "TODO - no entry point"
        } ]
      },
      "routesDiscovered" : [ {
        "routeSignature" : "org.springframework.samples.petclinic.vet.VetController.showVetList(java.util.Map)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.vet.VetController.showResourcesVetList()"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.initCreationForm(java.util.Map)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.processCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.initFindForm(java.util.Map)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.processFindForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,java.util.Map)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.validation.BindingResult,int)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.showOwner(int)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.OwnerController.deleteOwner(java.lang.String)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.system.CrashController.triggerException()"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.VisitController.initNewVisitForm(int,java.util.Map)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.VisitController.processNewVisitForm(org.springframework.samples.petclinic.visit.Visit,org.springframework.validation.BindingResult)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.system.WelcomeController.welcome()"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.PetController.initCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.ui.ModelMap)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.PetController.processCreationForm(org.springframework.samples.petclinic.owner.Owner,org.springframework.samples.petclinic.owner.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)"
      }, {
        "routeSignature" : "org.springframework.samples.petclinic.owner.PetController.processUpdateForm(org.springframework.samples.petclinic.owner.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.owner.Owner,org.springframework.ui.ModelMap)"
      } ]
    },
    "invocations" : [ {
      "commandLine" : "java -jar /Users/shaneschisler/projects/sast-umbrella-policies/contrast-scan-java-cli/build/libs/contrast-scan-java-cli-2.0.0-SNAPSHOT.jar target/spring-petclinic-2.5.0-SNAPSHOT.jar -o petclinic-eh.sarif --prescan-metadata prescan.json",
      "toolExecutionNotifications" : [ ],
      "executionSuccessful" : true
    } ]
  } ]
}